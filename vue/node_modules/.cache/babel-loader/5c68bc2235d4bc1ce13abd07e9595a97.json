{"ast":null,"code":"import { defineComponent, reactive, toRefs, resolveComponent, openBlock, createElementBlock, normalizeClass, normalizeStyle, withKeys, withModifiers, createVNode, withCtx, createElementVNode, toDisplayString } from 'vue';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { useSliderButton } from './useSliderButton.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { UPDATE_MODEL_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElSliderButton\",\n  components: {\n    ElTooltip\n  },\n  props: {\n    modelValue: {\n      type: Number,\n      default: 0\n    },\n    vertical: {\n      type: Boolean,\n      default: false\n    },\n    tooltipClass: {\n      type: String,\n      default: \"\"\n    }\n  },\n  emits: [UPDATE_MODEL_EVENT],\n\n  setup(props, {\n    emit\n  }) {\n    const ns = useNamespace(\"slider\");\n    const initData = reactive({\n      hovering: false,\n      dragging: false,\n      isClick: false,\n      startX: 0,\n      currentX: 0,\n      startY: 0,\n      currentY: 0,\n      startPosition: 0,\n      newPosition: 0,\n      oldValue: props.modelValue\n    });\n    const {\n      tooltip,\n      showTooltip,\n      tooltipVisible,\n      wrapperStyle,\n      formatValue,\n      handleMouseEnter,\n      handleMouseLeave,\n      onButtonDown,\n      onLeftKeyDown,\n      onRightKeyDown,\n      setPosition\n    } = useSliderButton(props, initData, emit);\n    const {\n      hovering,\n      dragging\n    } = toRefs(initData);\n    return {\n      ns,\n      tooltip,\n      tooltipVisible,\n      showTooltip,\n      wrapperStyle,\n      formatValue,\n      handleMouseEnter,\n      handleMouseLeave,\n      onButtonDown,\n      onLeftKeyDown,\n      onRightKeyDown,\n      setPosition,\n      hovering,\n      dragging\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  return openBlock(), createElementBlock(\"div\", {\n    ref: \"button\",\n    class: normalizeClass([_ctx.ns.e(\"button-wrapper\"), {\n      hover: _ctx.hovering,\n      dragging: _ctx.dragging\n    }]),\n    style: normalizeStyle(_ctx.wrapperStyle),\n    tabindex: \"0\",\n    onMouseenter: _cache[1] || (_cache[1] = (...args) => _ctx.handleMouseEnter && _ctx.handleMouseEnter(...args)),\n    onMouseleave: _cache[2] || (_cache[2] = (...args) => _ctx.handleMouseLeave && _ctx.handleMouseLeave(...args)),\n    onMousedown: _cache[3] || (_cache[3] = (...args) => _ctx.onButtonDown && _ctx.onButtonDown(...args)),\n    onTouchstart: _cache[4] || (_cache[4] = (...args) => _ctx.onButtonDown && _ctx.onButtonDown(...args)),\n    onFocus: _cache[5] || (_cache[5] = (...args) => _ctx.handleMouseEnter && _ctx.handleMouseEnter(...args)),\n    onBlur: _cache[6] || (_cache[6] = (...args) => _ctx.handleMouseLeave && _ctx.handleMouseLeave(...args)),\n    onKeydown: [_cache[7] || (_cache[7] = withKeys((...args) => _ctx.onLeftKeyDown && _ctx.onLeftKeyDown(...args), [\"left\"])), _cache[8] || (_cache[8] = withKeys((...args) => _ctx.onRightKeyDown && _ctx.onRightKeyDown(...args), [\"right\"])), _cache[9] || (_cache[9] = withKeys(withModifiers((...args) => _ctx.onLeftKeyDown && _ctx.onLeftKeyDown(...args), [\"prevent\"]), [\"down\"])), _cache[10] || (_cache[10] = withKeys(withModifiers((...args) => _ctx.onRightKeyDown && _ctx.onRightKeyDown(...args), [\"prevent\"]), [\"up\"]))]\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"tooltip\",\n    visible: _ctx.tooltipVisible,\n    \"onUpdate:visible\": _cache[0] || (_cache[0] = $event => _ctx.tooltipVisible = $event),\n    placement: \"top\",\n    \"stop-popper-mouse-event\": false,\n    \"popper-class\": _ctx.tooltipClass,\n    disabled: !_ctx.showTooltip,\n    persistent: \"\"\n  }, {\n    content: withCtx(() => [createElementVNode(\"span\", null, toDisplayString(_ctx.formatValue), 1)]),\n    default: withCtx(() => [createElementVNode(\"div\", {\n      class: normalizeClass([_ctx.ns.e(\"button\"), {\n        hover: _ctx.hovering,\n        dragging: _ctx.dragging\n      }])\n    }, null, 2)]),\n    _: 1\n  }, 8, [\"visible\", \"popper-class\", \"disabled\"])], 38);\n}\n\nvar SliderButton = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { SliderButton as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElTooltip","props","modelValue","type","Number","default","vertical","Boolean","tooltipClass","String","emits","UPDATE_MODEL_EVENT","setup","emit","ns","useNamespace","initData","reactive","hovering","dragging","isClick","startX","currentX","startY","currentY","startPosition","newPosition","oldValue","tooltip","showTooltip","tooltipVisible","wrapperStyle","formatValue","handleMouseEnter","handleMouseLeave","onButtonDown","onLeftKeyDown","onRightKeyDown","setPosition","useSliderButton","toRefs","_createElementBlock","ref","class","_normalizeClass","_ctx","e","hover","style","_normalizeStyle","tabindex","onMouseenter","_cache","onMouseleave","onMousedown","onTouchstart","onFocus","onBlur","onKeydown","_createVNode","_component_el_tooltip","visible","$event","placement","disabled","persistent","content","_withCtx","_createElementVNode","toDisplayString"],"sources":["../../../../../../packages/components/slider/src/button.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"button\"\n    :class=\"[ns.e('button-wrapper'), { hover: hovering, dragging }]\"\n    :style=\"wrapperStyle\"\n    tabindex=\"0\"\n    @mouseenter=\"handleMouseEnter\"\n    @mouseleave=\"handleMouseLeave\"\n    @mousedown=\"onButtonDown\"\n    @touchstart=\"onButtonDown\"\n    @focus=\"handleMouseEnter\"\n    @blur=\"handleMouseLeave\"\n    @keydown.left=\"onLeftKeyDown\"\n    @keydown.right=\"onRightKeyDown\"\n    @keydown.down.prevent=\"onLeftKeyDown\"\n    @keydown.up.prevent=\"onRightKeyDown\"\n  >\n    <el-tooltip\n      ref=\"tooltip\"\n      v-model:visible=\"tooltipVisible\"\n      placement=\"top\"\n      :stop-popper-mouse-event=\"false\"\n      :popper-class=\"tooltipClass\"\n      :disabled=\"!showTooltip\"\n      persistent\n    >\n      <template #content>\n        <span>{{ formatValue }}</span>\n      </template>\n      <div :class=\"[ns.e('button'), { hover: hovering, dragging }]\"></div>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, reactive, toRefs } from 'vue'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport { UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport { useNamespace } from '@element-plus/hooks'\nimport { useSliderButton } from './useSliderButton'\n\nexport default defineComponent({\n  name: 'ElSliderButton',\n\n  components: {\n    ElTooltip,\n  },\n\n  props: {\n    modelValue: {\n      type: Number,\n      default: 0,\n    },\n    vertical: {\n      type: Boolean,\n      default: false,\n    },\n    tooltipClass: {\n      type: String,\n      default: '',\n    },\n  },\n\n  emits: [UPDATE_MODEL_EVENT],\n\n  setup(props, { emit }) {\n    const ns = useNamespace('slider')\n    const initData = reactive({\n      hovering: false,\n      dragging: false,\n      isClick: false,\n      startX: 0,\n      currentX: 0,\n      startY: 0,\n      currentY: 0,\n      startPosition: 0,\n      newPosition: 0,\n      oldValue: props.modelValue,\n    })\n\n    const {\n      tooltip,\n      showTooltip,\n      tooltipVisible,\n      wrapperStyle,\n      formatValue,\n      handleMouseEnter,\n      handleMouseLeave,\n      onButtonDown,\n      onLeftKeyDown,\n      onRightKeyDown,\n      setPosition,\n    } = useSliderButton(props, initData, emit)\n\n    const { hovering, dragging } = toRefs(initData)\n\n    return {\n      ns,\n      tooltip,\n      tooltipVisible,\n      showTooltip,\n      wrapperStyle,\n      formatValue,\n      handleMouseEnter,\n      handleMouseLeave,\n      onButtonDown,\n      onLeftKeyDown,\n      onRightKeyDown,\n      setPosition,\n\n      hovering,\n      dragging,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}