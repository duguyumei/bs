{"ast":null,"code":"import { defineComponent, computed, ref, inject, resolveComponent, openBlock, createElementBlock, createElementVNode, toDisplayString, normalizeClass, createVNode, createCommentVNode } from 'vue';\nimport dayjs from 'dayjs';\nimport { union } from 'lodash-unified';\nimport '../../../../hooks/index.mjs';\nimport '../../../../constants/index.mjs';\nimport TimeSpinner from './basic-time-spinner.mjs';\nimport { useOldValue, getAvailableArrs } from './useTimePicker.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\n\nconst makeSelectRange = (start, end) => {\n  const result = [];\n\n  for (let i = start; i <= end; i++) {\n    result.push(i);\n  }\n\n  return result;\n};\n\nconst _sfc_main = defineComponent({\n  components: {\n    TimeSpinner\n  },\n  props: {\n    visible: Boolean,\n    actualVisible: Boolean,\n    parsedValue: {\n      type: [Array]\n    },\n    format: {\n      type: String,\n      default: \"\"\n    }\n  },\n  emits: [\"pick\", \"select-range\", \"set-picker-option\"],\n\n  setup(props, ctx) {\n    const {\n      t,\n      lang\n    } = useLocale();\n    const minDate = computed(() => props.parsedValue[0]);\n    const maxDate = computed(() => props.parsedValue[1]);\n    const oldValue = useOldValue(props);\n\n    const handleCancel = () => {\n      ctx.emit(\"pick\", oldValue.value, null);\n    };\n\n    const showSeconds = computed(() => {\n      return props.format.includes(\"ss\");\n    });\n    const amPmMode = computed(() => {\n      if (props.format.includes(\"A\")) return \"A\";\n      if (props.format.includes(\"a\")) return \"a\";\n      return \"\";\n    });\n    const minSelectableRange = ref([]);\n    const maxSelectableRange = ref([]);\n\n    const handleConfirm = (visible = false) => {\n      ctx.emit(\"pick\", [minDate.value, maxDate.value], visible);\n    };\n\n    const handleMinChange = date => {\n      handleChange(date.millisecond(0), maxDate.value);\n    };\n\n    const handleMaxChange = date => {\n      handleChange(minDate.value, date.millisecond(0));\n    };\n\n    const isValidValue = _date => {\n      const parsedDate = _date.map(_ => dayjs(_).locale(lang.value));\n\n      const result = getRangeAvailableTime(parsedDate);\n      return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1]);\n    };\n\n    const handleChange = (_minDate, _maxDate) => {\n      ctx.emit(\"pick\", [_minDate, _maxDate], true);\n    };\n\n    const btnConfirmDisabled = computed(() => {\n      return minDate.value > maxDate.value;\n    });\n    const selectionRange = ref([0, 2]);\n\n    const setMinSelectionRange = (start, end) => {\n      ctx.emit(\"select-range\", start, end, \"min\");\n      selectionRange.value = [start, end];\n    };\n\n    const offset = computed(() => showSeconds.value ? 11 : 8);\n\n    const setMaxSelectionRange = (start, end) => {\n      ctx.emit(\"select-range\", start, end, \"max\");\n      selectionRange.value = [start + offset.value, end + offset.value];\n    };\n\n    const changeSelectionRange = step => {\n      const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11];\n      const mapping = [\"hours\", \"minutes\"].concat(showSeconds.value ? [\"seconds\"] : []);\n      const index = list.indexOf(selectionRange.value[0]);\n      const next = (index + step + list.length) % list.length;\n      const half = list.length / 2;\n\n      if (next < half) {\n        timePickerOptions[\"start_emitSelectRange\"](mapping[next]);\n      } else {\n        timePickerOptions[\"end_emitSelectRange\"](mapping[next - half]);\n      }\n    };\n\n    const handleKeydown = event => {\n      const code = event.code;\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1;\n        changeSelectionRange(step);\n        event.preventDefault();\n        return;\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1;\n        const role = selectionRange.value[0] < offset.value ? \"start\" : \"end\";\n        timePickerOptions[`${role}_scrollDown`](step);\n        event.preventDefault();\n        return;\n      }\n    };\n\n    const disabledHours_ = (role, compare) => {\n      const defaultDisable = disabledHours ? disabledHours(role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value);\n      const compareHour = compareDate.hour();\n      const nextDisable = isStart ? makeSelectRange(compareHour + 1, 23) : makeSelectRange(0, compareHour - 1);\n      return union(defaultDisable, nextDisable);\n    };\n\n    const disabledMinutes_ = (hour, role, compare) => {\n      const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value);\n      const compareHour = compareDate.hour();\n\n      if (hour !== compareHour) {\n        return defaultDisable;\n      }\n\n      const compareMinute = compareDate.minute();\n      const nextDisable = isStart ? makeSelectRange(compareMinute + 1, 59) : makeSelectRange(0, compareMinute - 1);\n      return union(defaultDisable, nextDisable);\n    };\n\n    const disabledSeconds_ = (hour, minute, role, compare) => {\n      const defaultDisable = disabledSeconds ? disabledSeconds(hour, minute, role) : [];\n      const isStart = role === \"start\";\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value);\n      const compareHour = compareDate.hour();\n      const compareMinute = compareDate.minute();\n\n      if (hour !== compareHour || minute !== compareMinute) {\n        return defaultDisable;\n      }\n\n      const compareSecond = compareDate.second();\n      const nextDisable = isStart ? makeSelectRange(compareSecond + 1, 59) : makeSelectRange(0, compareSecond - 1);\n      return union(defaultDisable, nextDisable);\n    };\n\n    const getRangeAvailableTime = dates => {\n      return dates.map((_, index) => getRangeAvailableTimeEach(dates[0], dates[1], index === 0 ? \"start\" : \"end\"));\n    };\n\n    const {\n      getAvailableHours,\n      getAvailableMinutes,\n      getAvailableSeconds\n    } = getAvailableArrs(disabledHours_, disabledMinutes_, disabledSeconds_);\n\n    const getRangeAvailableTimeEach = (startDate, endDate, role) => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds\n      };\n      const isStart = role === \"start\";\n      let result = isStart ? startDate : endDate;\n      const compareDate = isStart ? endDate : startDate;\n      [\"hour\", \"minute\", \"second\"].forEach(_ => {\n        if (availableMap[_]) {\n          let availableArr;\n          const method = availableMap[_];\n\n          if (_ === \"minute\") {\n            availableArr = method(result.hour(), role, compareDate);\n          } else if (_ === \"second\") {\n            availableArr = method(result.hour(), result.minute(), role, compareDate);\n          } else {\n            availableArr = method(role, compareDate);\n          }\n\n          if (availableArr && availableArr.length && !availableArr.includes(result[_]())) {\n            const pos = isStart ? 0 : availableArr.length - 1;\n            result = result[_](availableArr[pos]);\n          }\n        }\n      });\n      return result;\n    };\n\n    const parseUserInput = value => {\n      if (!value) return null;\n\n      if (Array.isArray(value)) {\n        return value.map(_ => dayjs(_, props.format).locale(lang.value));\n      }\n\n      return dayjs(value, props.format).locale(lang.value);\n    };\n\n    const formatToString = value => {\n      if (!value) return null;\n\n      if (Array.isArray(value)) {\n        return value.map(_ => _.format(props.format));\n      }\n\n      return value.format(props.format);\n    };\n\n    const getDefaultValue = () => {\n      if (Array.isArray(defaultValue)) {\n        return defaultValue.map(_ => dayjs(_).locale(lang.value));\n      }\n\n      const defaultDay = dayjs(defaultValue).locale(lang.value);\n      return [defaultDay, defaultDay.add(60, \"m\")];\n    };\n\n    ctx.emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    ctx.emit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    ctx.emit(\"set-picker-option\", [\"isValidValue\", isValidValue]);\n    ctx.emit(\"set-picker-option\", [\"handleKeydown\", handleKeydown]);\n    ctx.emit(\"set-picker-option\", [\"getDefaultValue\", getDefaultValue]);\n    ctx.emit(\"set-picker-option\", [\"getRangeAvailableTime\", getRangeAvailableTime]);\n    const timePickerOptions = {};\n\n    const onSetOption = e => {\n      timePickerOptions[e[0]] = e[1];\n    };\n\n    const pickerBase = inject(\"EP_PICKER_BASE\");\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue\n    } = pickerBase.props;\n    return {\n      arrowControl,\n      onSetOption,\n      setMaxSelectionRange,\n      setMinSelectionRange,\n      btnConfirmDisabled,\n      handleCancel,\n      handleConfirm,\n      t,\n      showSeconds,\n      minDate,\n      maxDate,\n      amPmMode,\n      handleMinChange,\n      handleMaxChange,\n      minSelectableRange,\n      maxSelectableRange,\n      disabledHours_,\n      disabledMinutes_,\n      disabledSeconds_\n    };\n  }\n\n});\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"el-time-range-picker el-picker-panel\"\n};\nconst _hoisted_2 = {\n  class: \"el-time-range-picker__content\"\n};\nconst _hoisted_3 = {\n  class: \"el-time-range-picker__cell\"\n};\nconst _hoisted_4 = {\n  class: \"el-time-range-picker__header\"\n};\nconst _hoisted_5 = {\n  class: \"el-time-range-picker__cell\"\n};\nconst _hoisted_6 = {\n  class: \"el-time-range-picker__header\"\n};\nconst _hoisted_7 = {\n  class: \"el-time-panel__footer\"\n};\nconst _hoisted_8 = [\"disabled\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_time_spinner = resolveComponent(\"time-spinner\");\n\n  return _ctx.actualVisible ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [createElementVNode(\"div\", _hoisted_2, [createElementVNode(\"div\", _hoisted_3, [createElementVNode(\"div\", _hoisted_4, toDisplayString(_ctx.t(\"el.datepicker.startTime\")), 1), createElementVNode(\"div\", {\n    class: normalizeClass([{\n      \"has-seconds\": _ctx.showSeconds,\n      \"is-arrow\": _ctx.arrowControl\n    }, \"el-time-range-picker__body el-time-panel__content\"])\n  }, [createVNode(_component_time_spinner, {\n    ref: \"minSpinner\",\n    role: \"start\",\n    \"show-seconds\": _ctx.showSeconds,\n    \"am-pm-mode\": _ctx.amPmMode,\n    \"arrow-control\": _ctx.arrowControl,\n    \"spinner-date\": _ctx.minDate,\n    \"disabled-hours\": _ctx.disabledHours_,\n    \"disabled-minutes\": _ctx.disabledMinutes_,\n    \"disabled-seconds\": _ctx.disabledSeconds_,\n    onChange: _ctx.handleMinChange,\n    onSetOption: _ctx.onSetOption,\n    onSelectRange: _ctx.setMinSelectionRange\n  }, null, 8, [\"show-seconds\", \"am-pm-mode\", \"arrow-control\", \"spinner-date\", \"disabled-hours\", \"disabled-minutes\", \"disabled-seconds\", \"onChange\", \"onSetOption\", \"onSelectRange\"])], 2)]), createElementVNode(\"div\", _hoisted_5, [createElementVNode(\"div\", _hoisted_6, toDisplayString(_ctx.t(\"el.datepicker.endTime\")), 1), createElementVNode(\"div\", {\n    class: normalizeClass([{\n      \"has-seconds\": _ctx.showSeconds,\n      \"is-arrow\": _ctx.arrowControl\n    }, \"el-time-range-picker__body el-time-panel__content\"])\n  }, [createVNode(_component_time_spinner, {\n    ref: \"maxSpinner\",\n    role: \"end\",\n    \"show-seconds\": _ctx.showSeconds,\n    \"am-pm-mode\": _ctx.amPmMode,\n    \"arrow-control\": _ctx.arrowControl,\n    \"spinner-date\": _ctx.maxDate,\n    \"disabled-hours\": _ctx.disabledHours_,\n    \"disabled-minutes\": _ctx.disabledMinutes_,\n    \"disabled-seconds\": _ctx.disabledSeconds_,\n    onChange: _ctx.handleMaxChange,\n    onSetOption: _ctx.onSetOption,\n    onSelectRange: _ctx.setMaxSelectionRange\n  }, null, 8, [\"show-seconds\", \"am-pm-mode\", \"arrow-control\", \"spinner-date\", \"disabled-hours\", \"disabled-minutes\", \"disabled-seconds\", \"onChange\", \"onSetOption\", \"onSelectRange\"])], 2)])]), createElementVNode(\"div\", _hoisted_7, [createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"el-time-panel__btn cancel\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.handleCancel())\n  }, toDisplayString(_ctx.t(\"el.datepicker.cancel\")), 1), createElementVNode(\"button\", {\n    type: \"button\",\n    class: \"el-time-panel__btn confirm\",\n    disabled: _ctx.btnConfirmDisabled,\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.handleConfirm())\n  }, toDisplayString(_ctx.t(\"el.datepicker.confirm\")), 9, _hoisted_8)])])) : createCommentVNode(\"v-if\", true);\n}\n\nvar TimeRangePanel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { TimeRangePanel as default };","map":{"version":3,"mappings":"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","names":["makeSelectRange","start","end","result","i","push","_sfc_main","defineComponent","components","TimeSpinner","props","visible","Boolean","actualVisible","parsedValue","type","Array","format","String","default","emits","setup","ctx","t","lang","useLocale","minDate","computed","maxDate","oldValue","useOldValue","handleCancel","emit","value","showSeconds","includes","amPmMode","minSelectableRange","ref","maxSelectableRange","handleConfirm","handleMinChange","date","handleChange","millisecond","handleMaxChange","isValidValue","_date","parsedDate","map","_","dayjs","locale","getRangeAvailableTime","isSame","_minDate","_maxDate","btnConfirmDisabled","selectionRange","setMinSelectionRange","offset","setMaxSelectionRange","changeSelectionRange","step","list","mapping","concat","index","indexOf","next","length","half","timePickerOptions","handleKeydown","event","code","EVENT_CODE","left","right","preventDefault","up","down","role","disabledHours_","compare","defaultDisable","disabledHours","isStart","compareDate","compareHour","hour","nextDisable","union","disabledMinutes_","disabledMinutes","compareMinute","minute","disabledSeconds_","disabledSeconds","compareSecond","second","dates","getRangeAvailableTimeEach","getAvailableHours","getAvailableMinutes","getAvailableSeconds","getAvailableArrs","startDate","endDate","availableMap","forEach","availableArr","method","pos","parseUserInput","isArray","formatToString","getDefaultValue","defaultValue","defaultDay","add","onSetOption","e","pickerBase","inject","arrowControl","class","_ctx","_createElementBlock","_createElementVNode","_toDisplayString","_normalizeClass","_createVNode","_component_time_spinner","onChange","onSelectRange","onClick","_cache","toDisplayString","disabled","_hoisted_8","createCommentVNode"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-range.vue"],"sourcesContent":["<template>\n  <div v-if=\"actualVisible\" class=\"el-time-range-picker el-picker-panel\">\n    <div class=\"el-time-range-picker__content\">\n      <div class=\"el-time-range-picker__cell\">\n        <div class=\"el-time-range-picker__header\">\n          {{ t('el.datepicker.startTime') }}\n        </div>\n        <div\n          :class=\"{ 'has-seconds': showSeconds, 'is-arrow': arrowControl }\"\n          class=\"el-time-range-picker__body el-time-panel__content\"\n        >\n          <time-spinner\n            ref=\"minSpinner\"\n            role=\"start\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"minDate\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMinChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMinSelectionRange\"\n          />\n        </div>\n      </div>\n      <div class=\"el-time-range-picker__cell\">\n        <div class=\"el-time-range-picker__header\">\n          {{ t('el.datepicker.endTime') }}\n        </div>\n        <div\n          :class=\"{ 'has-seconds': showSeconds, 'is-arrow': arrowControl }\"\n          class=\"el-time-range-picker__body el-time-panel__content\"\n        >\n          <time-spinner\n            ref=\"maxSpinner\"\n            role=\"end\"\n            :show-seconds=\"showSeconds\"\n            :am-pm-mode=\"amPmMode\"\n            :arrow-control=\"arrowControl\"\n            :spinner-date=\"maxDate\"\n            :disabled-hours=\"disabledHours_\"\n            :disabled-minutes=\"disabledMinutes_\"\n            :disabled-seconds=\"disabledSeconds_\"\n            @change=\"handleMaxChange\"\n            @set-option=\"onSetOption\"\n            @select-range=\"setMaxSelectionRange\"\n          />\n        </div>\n      </div>\n    </div>\n    <div class=\"el-time-panel__footer\">\n      <button\n        type=\"button\"\n        class=\"el-time-panel__btn cancel\"\n        @click=\"handleCancel()\"\n      >\n        {{ t('el.datepicker.cancel') }}\n      </button>\n      <button\n        type=\"button\"\n        class=\"el-time-panel__btn confirm\"\n        :disabled=\"btnConfirmDisabled\"\n        @click=\"handleConfirm()\"\n      >\n        {{ t('el.datepicker.confirm') }}\n      </button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, inject } from 'vue'\nimport dayjs from 'dayjs'\nimport { union } from 'lodash-unified'\nimport { useLocale } from '@element-plus/hooks'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport TimeSpinner from './basic-time-spinner.vue'\nimport { getAvailableArrs, useOldValue } from './useTimePicker'\n\nimport type { PropType } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nconst makeSelectRange = (start: number, end: number) => {\n  const result = []\n  for (let i = start; i <= end; i++) {\n    result.push(i)\n  }\n  return result\n}\nexport default defineComponent({\n  components: { TimeSpinner },\n\n  props: {\n    visible: Boolean,\n    actualVisible: Boolean,\n    parsedValue: {\n      type: [Array] as PropType<Array<Dayjs>>,\n    },\n    format: {\n      type: String,\n      default: '',\n    },\n  },\n\n  emits: ['pick', 'select-range', 'set-picker-option'],\n\n  setup(props, ctx) {\n    const { t, lang } = useLocale()\n    const minDate = computed(() => props.parsedValue[0])\n    const maxDate = computed(() => props.parsedValue[1])\n    const oldValue = useOldValue(props)\n    const handleCancel = () => {\n      ctx.emit('pick', oldValue.value, null)\n    }\n    const showSeconds = computed(() => {\n      return props.format.includes('ss')\n    })\n    const amPmMode = computed(() => {\n      if (props.format.includes('A')) return 'A'\n      if (props.format.includes('a')) return 'a'\n      return ''\n    })\n\n    const minSelectableRange = ref([])\n    const maxSelectableRange = ref([])\n\n    const handleConfirm = (visible = false) => {\n      ctx.emit('pick', [minDate.value, maxDate.value], visible)\n    }\n\n    const handleMinChange = (date) => {\n      handleChange(date.millisecond(0), maxDate.value)\n    }\n    const handleMaxChange = (date) => {\n      handleChange(minDate.value, date.millisecond(0))\n    }\n\n    const isValidValue = (_date: Dayjs[]) => {\n      const parsedDate = _date.map((_) => dayjs(_).locale(lang.value))\n      const result = getRangeAvailableTime(parsedDate)\n      return parsedDate[0].isSame(result[0]) && parsedDate[1].isSame(result[1])\n    }\n\n    const handleChange = (_minDate, _maxDate) => {\n      // todo getRangeAvailableTime(_date).millisecond(0)\n      ctx.emit('pick', [_minDate, _maxDate], true)\n    }\n    const btnConfirmDisabled = computed(() => {\n      return minDate.value > maxDate.value\n    })\n\n    const selectionRange = ref([0, 2])\n    const setMinSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end, 'min')\n      selectionRange.value = [start, end]\n    }\n\n    const offset = computed(() => (showSeconds.value ? 11 : 8))\n    const setMaxSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end, 'max')\n      selectionRange.value = [start + offset.value, end + offset.value]\n    }\n\n    const changeSelectionRange = (step) => {\n      const list = showSeconds.value ? [0, 3, 6, 11, 14, 17] : [0, 3, 8, 11]\n      const mapping = ['hours', 'minutes'].concat(\n        showSeconds.value ? ['seconds'] : []\n      )\n      const index = list.indexOf(selectionRange.value[0])\n      const next = (index + step + list.length) % list.length\n      const half = list.length / 2\n      if (next < half) {\n        timePickerOptions['start_emitSelectRange'](mapping[next])\n      } else {\n        timePickerOptions['end_emitSelectRange'](mapping[next - half])\n      }\n    }\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1\n        changeSelectionRange(step)\n        event.preventDefault()\n        return\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1\n        const role = selectionRange.value[0] < offset.value ? 'start' : 'end'\n        timePickerOptions[`${role}_scrollDown`](step)\n        event.preventDefault()\n        return\n      }\n    }\n\n    const disabledHours_ = (role, compare) => {\n      const defaultDisable = disabledHours ? disabledHours(role) : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      const nextDisable = isStart\n        ? makeSelectRange(compareHour + 1, 23)\n        : makeSelectRange(0, compareHour - 1)\n      return union(defaultDisable, nextDisable)\n    }\n    const disabledMinutes_ = (hour, role, compare) => {\n      const defaultDisable = disabledMinutes ? disabledMinutes(hour, role) : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      if (hour !== compareHour) {\n        return defaultDisable\n      }\n      const compareMinute = compareDate.minute()\n      const nextDisable = isStart\n        ? makeSelectRange(compareMinute + 1, 59)\n        : makeSelectRange(0, compareMinute - 1)\n      return union(defaultDisable, nextDisable)\n    }\n    const disabledSeconds_ = (hour, minute, role, compare) => {\n      const defaultDisable = disabledSeconds\n        ? disabledSeconds(hour, minute, role)\n        : []\n      const isStart = role === 'start'\n      const compareDate = compare || (isStart ? maxDate.value : minDate.value)\n      const compareHour = compareDate.hour()\n      const compareMinute = compareDate.minute()\n      if (hour !== compareHour || minute !== compareMinute) {\n        return defaultDisable\n      }\n      const compareSecond = compareDate.second()\n      const nextDisable = isStart\n        ? makeSelectRange(compareSecond + 1, 59)\n        : makeSelectRange(0, compareSecond - 1)\n      return union(defaultDisable, nextDisable)\n    }\n\n    const getRangeAvailableTime = (dates: Array<Dayjs>) => {\n      return dates.map((_, index) =>\n        getRangeAvailableTimeEach(\n          dates[0],\n          dates[1],\n          index === 0 ? 'start' : 'end'\n        )\n      )\n    }\n\n    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n      getAvailableArrs(disabledHours_, disabledMinutes_, disabledSeconds_)\n\n    const getRangeAvailableTimeEach = (\n      startDate: Dayjs,\n      endDate: Dayjs,\n      role\n    ) => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds,\n      }\n      const isStart = role === 'start'\n      let result = isStart ? startDate : endDate\n      const compareDate = isStart ? endDate : startDate\n      ;['hour', 'minute', 'second'].forEach((_) => {\n        if (availableMap[_]) {\n          let availableArr\n          const method = availableMap[_]\n          if (_ === 'minute') {\n            availableArr = method(result.hour(), role, compareDate)\n          } else if (_ === 'second') {\n            availableArr = method(\n              result.hour(),\n              result.minute(),\n              role,\n              compareDate\n            )\n          } else {\n            availableArr = method(role, compareDate)\n          }\n          if (\n            availableArr &&\n            availableArr.length &&\n            !availableArr.includes(result[_]())\n          ) {\n            const pos = isStart ? 0 : availableArr.length - 1\n            result = result[_](availableArr[pos])\n          }\n        }\n      })\n      return result\n    }\n\n    const parseUserInput = (value: Dayjs[] | Dayjs) => {\n      if (!value) return null\n      if (Array.isArray(value)) {\n        return value.map((_) => dayjs(_, props.format).locale(lang.value))\n      }\n      return dayjs(value, props.format).locale(lang.value)\n    }\n\n    const formatToString = (value: Dayjs[] | Dayjs) => {\n      if (!value) return null\n      if (Array.isArray(value)) {\n        return value.map((_) => _.format(props.format))\n      }\n      return value.format(props.format)\n    }\n\n    const getDefaultValue = () => {\n      if (Array.isArray(defaultValue)) {\n        return defaultValue.map((_) => dayjs(_).locale(lang.value))\n      }\n      const defaultDay = dayjs(defaultValue).locale(lang.value)\n      return [defaultDay, defaultDay.add(60, 'm')]\n    }\n\n    ctx.emit('set-picker-option', ['formatToString', formatToString])\n    ctx.emit('set-picker-option', ['parseUserInput', parseUserInput])\n    ctx.emit('set-picker-option', ['isValidValue', isValidValue])\n    ctx.emit('set-picker-option', ['handleKeydown', handleKeydown])\n    ctx.emit('set-picker-option', ['getDefaultValue', getDefaultValue])\n    ctx.emit('set-picker-option', [\n      'getRangeAvailableTime',\n      getRangeAvailableTime,\n    ])\n\n    const timePickerOptions = {} as any\n    const onSetOption = (e) => {\n      timePickerOptions[e[0]] = e[1]\n    }\n\n    const pickerBase = inject('EP_PICKER_BASE') as any\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue,\n    } = pickerBase.props\n\n    return {\n      arrowControl,\n      onSetOption,\n      setMaxSelectionRange,\n      setMinSelectionRange,\n      btnConfirmDisabled,\n      handleCancel,\n      handleConfirm,\n      t,\n      showSeconds,\n      minDate,\n      maxDate,\n      amPmMode,\n      handleMinChange,\n      handleMaxChange,\n      minSelectableRange,\n      maxSelectableRange,\n      disabledHours_,\n      disabledMinutes_,\n      disabledSeconds_,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}