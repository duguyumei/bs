{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, withCtx as _withCtx, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"dishManage_table\"\n};\n\nconst _hoisted_2 = /*#__PURE__*/_createTextVNode(\"接单\");\n\nconst _hoisted_3 = {\n  style: {\n    \"margin-top\": \"10px\"\n  }\n};\nexport function render(_ctx, _cache) {\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n\n  const _component_el_button = _resolveComponent(\"el-button\");\n\n  const _component_el_table = _resolveComponent(\"el-table\");\n\n  const _component_el_pagination = _resolveComponent(\"el-pagination\");\n\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_table, {\n    data: _ctx.tableData,\n    border: \"\",\n    \"row-class-name\": _ctx.rowClassName\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      prop: \"id\",\n      label: \"订单ID\",\n      sortable: \"\",\n      width: \"100\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"stime\",\n      label: \"时间\",\n      sortable: \"\",\n      width: \"200\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"dish\",\n      label: \"菜品\",\n      sortable: \"\"\n    }, {\n      default: _withCtx(scope => [_createElementVNode(\"div\", null, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(scope.row.dish, item => {\n        return _openBlock(), _createElementBlock(\"li\", null, _toDisplayString(item), 1\n        /* TEXT */\n        );\n      }), 256\n      /* UNKEYED_FRAGMENT */\n      ))])])]),\n      _: 1\n      /* STABLE */\n\n    }), _createVNode(_component_el_table_column, {\n      prop: \"message\",\n      label: \"备注\",\n      sortable: \"\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"people\",\n      label: \"收货人\",\n      sortable: \"\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"address\",\n      label: \"收货地址\",\n      sortable: \"\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"ride\",\n      label: \"骑手\",\n      sortable: \"\"\n    }), _createVNode(_component_el_table_column, {\n      prop: \"state\",\n      label: \"状态\",\n      sortable: \"\"\n    }), _createVNode(_component_el_table_column, {\n      fixed: \"right\",\n      label: \"操作\",\n      width: 100\n    }, {\n      default: _withCtx(scope => [_createVNode(_component_el_button, {\n        type: \"text\",\n        size: \"small\",\n        onClick: $event => _ctx.acceptOrder(scope.row)\n      }, {\n        default: _withCtx(() => [_hoisted_2]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1032\n      /* PROPS, DYNAMIC_SLOTS */\n      , [\"onClick\"])]),\n      _: 1\n      /* STABLE */\n\n    })]),\n    _: 1\n    /* STABLE */\n\n  }, 8\n  /* PROPS */\n  , [\"data\", \"row-class-name\"]), _createCommentVNode(\"分页\"), _createElementVNode(\"div\", _hoisted_3, [_createVNode(_component_el_pagination, {\n    currentPage: _ctx.currentPage,\n    \"onUpdate:currentPage\": _cache[0] || (_cache[0] = $event => _ctx.currentPage = $event),\n    \"page-size\": _ctx.pageSize,\n    \"page-sizes\": [5, 10, 20],\n    layout: \"total, sizes, prev, pager, next, jumper\",\n    total: _ctx.total,\n    onSizeChange: _ctx.handleSizeChange,\n    onCurrentChange: _ctx.handleCurrentChange\n  }, null, 8\n  /* PROPS */\n  , [\"currentPage\", \"page-size\", \"total\", \"onSizeChange\", \"onCurrentChange\"])])]);\n}","map":{"version":3,"mappings":"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","names":["class","style","_createElementBlock","_createVNode","_component_el_table","data","_ctx","border","_component_el_table_column","prop","label","sortable","width","default","scope","_createElementVNode","_Fragment","_renderList","row","dish","item","_toDisplayString","fixed","_component_el_button","type","size","onClick","_createCommentVNode","_component_el_pagination","currentPage","$event","layout","total","onSizeChange","onCurrentChange"],"sourceRoot":"","sources":["E:\\notejs\\manage\\vue\\src\\views\\orderManage.vue"],"sourcesContent":["<template>\r\n    <div class=\"dishManage_table\">\r\n        <el-table :data=\"tableData\" border :row-class-name=\"rowClassName\">\r\n            <el-table-column prop=\"id\" label=\"订单ID\" sortable width=\"100\"/>\r\n            <el-table-column prop=\"stime\" label=\"时间\" sortable width=\"200\"/>\r\n            <el-table-column prop=\"dish\" label=\"菜品\" sortable>\r\n                <template #default=\"scope\">\r\n                    <div>\r\n                        <ul>\r\n                            <li v-for=\"item in scope.row.dish\">\r\n                                {{item}}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"message\" label=\"备注\" sortable/>\r\n            <el-table-column prop=\"people\" label=\"收货人\" sortable />\r\n            <el-table-column prop=\"address\" label=\"收货地址\" sortable />\r\n            <el-table-column prop=\"ride\" label=\"骑手\" sortable />\r\n            <el-table-column prop=\"state\" label=\"状态\" sortable />\r\n            <el-table-column fixed=\"right\" label=\"操作\" :width=\"100\" >\r\n                <template #default=\"scope\">\r\n                    <el-button type=\"text\" size=\"small\" @click=\"acceptOrder(scope.row)\">接单</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <!--分页-->\r\n        <div style=\"margin-top: 10px\">\r\n            <el-pagination\r\n                    v-model:currentPage=\"currentPage\"\r\n                    :page-size=\"pageSize\"\r\n                    :page-sizes=\"[5, 10, 20]\"\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=total\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n            >\r\n            </el-pagination>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import request from \"@/utils/requst\";\r\n\r\n    export default {\r\n        name: \"orderManage\",\r\n        components: {\r\n\r\n        },\r\n        data(){\r\n            return{\r\n                // isMax : false,//动态绑定表单中上传框\r\n                // search:'', //搜索关键词\r\n                returnData:[],\r\n                tableData:[], //表格数据\r\n                total:0, //数据量\r\n                currentPage:1, //页码\r\n                pageSize:10, //页容量\r\n                // dialogVisible:false, //新增窗口\r\n                // form:{} //新增表单\r\n            }\r\n        },\r\n        created() {\r\n            //页面加载时的方法\r\n            this.getData();\r\n        },\r\n        methods: {\r\n            //渲染tabledata\r\n            getData(){\r\n                var that = this;\r\n                request.get(\"/order\",{\r\n                    params:{\r\n                        pageNum:this.currentPage,\r\n                        pageSize:this.pageSize,\r\n                        id: eval(\"(\" + sessionStorage.getItem(\"data\") + \")\").id\r\n                    }\r\n                }).then(res=>{\r\n                    console.log(res)\r\n                    this.returnData = JSON.parse(JSON.stringify(res.data.records))//深拷贝,独立对象\r\n                    this.tableData = res.data.records;\r\n                    this.total = res.data.total;\r\n\r\n                    //处理时间\r\n                    // console.log(this.tableData[0]);\r\n                    for (var i = 0; i < this.tableData.length; i++){\r\n                        // console.log(this.tableData[i].stime);\r\n                        var newDate = new Date();\r\n                        newDate.setTime(this.tableData[i].stime);\r\n                        // console.log(newDate.toLocaleString());\r\n                        this.tableData[i].stime = newDate.toLocaleString();\r\n                    }\r\n\r\n                    //处理菜品\r\n                    for (var i = 0; i < this.tableData.length; i++){\r\n                        let dishlist=[];\r\n                        let dishes = this.tableData[i].dish.split(\" \");\r\n                        let num = 0;\r\n                        for(var j = 0; j < dishes.length; j+=2){\r\n                            let index = i;\r\n                            num = dishes[j+1];\r\n                            // console.log(dishes[j],\" \",dishes[j+1]);\r\n                            request.get(\"/dishes/getDataById\",{\r\n                                params:{\r\n                                    id: dishes[j]\r\n                                }\r\n                            }).then(res=>{\r\n                                var  dishstr = res.data.name + \" ---*\" +  num;\r\n                                dishlist.push(dishstr)\r\n                                // console.log(index,dishlist);\r\n                                that.tableData[index].dish = dishlist;\r\n                                // console.log(res.data.name)\r\n                                // if(n == dishes.length){\r\n                                    // that.tableData[i].dish = dishlist;\r\n                                    // console.log(\"index\",i)\r\n                                    // console.log(this.tableData[0]);\r\n                                // }\r\n                            })\r\n                        }\r\n                    }\r\n\r\n                    //处理状态\r\n                    for (var i = 0; i < this.tableData.length; i++){\r\n                        if(this.tableData[i].state != \"\")\r\n                    }\r\n                })\r\n            },\r\n            //把每一行的索引放进row\r\n            rowClassName({row, rowIndex}) {\r\n                row.index = rowIndex;\r\n            },\r\n            //分页操作\r\n            handleSizeChange(pageSize){\r\n                this.pageSize = pageSize;\r\n                this.getData();\r\n            },\r\n            handleCurrentChange(currentPage){\r\n                this.currentPage = currentPage;\r\n                this.getData();\r\n            },\r\n            acceptOrder(e){\r\n                if(e.state==\"已接单\"){\r\n                    alert(\"您已接单\");\r\n                }else{\r\n                    e.state = \"已接单\"\r\n                    let order = this.returnData[e.index];\r\n                    order.state=\"商家已接单\";\r\n                    console.log(order);\r\n                    request.put(\"/order/updateOrder\",order).then(res=>{\r\n                        console.log(res)\r\n                        if(res.code === '0'){\r\n                            this.$message({\r\n                                type:\"success\",\r\n                                message:\"更新成功\"\r\n                            });\r\n                            // this.getData();\r\n                        }else {\r\n                            this.$message({\r\n                                type:\"error\",\r\n                                message:res.message\r\n                            })\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}