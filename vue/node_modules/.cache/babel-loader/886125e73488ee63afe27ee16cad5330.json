{"ast":null,"code":"import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, mergeProps, Fragment, renderList, renderSlot, createVNode, normalizeClass, createBlock, createCommentVNode, normalizeProps } from 'vue';\nimport '../../../hooks/index.mjs';\nimport SkeletonItem from './skeleton-item2.mjs';\nimport { skeletonProps } from './skeleton.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useThrottleRender } from '../../../hooks/use-throttle-render/index.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElSkeleton\",\n  components: {\n    [SkeletonItem.name]: SkeletonItem\n  },\n  props: skeletonProps,\n\n  setup(props) {\n    const ns = useNamespace(\"skeleton\");\n    const innerLoading = computed(() => {\n      return props.loading;\n    });\n    const uiLoading = useThrottleRender(innerLoading, props.throttle);\n    return {\n      ns,\n      uiLoading\n    };\n  }\n\n});\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_skeleton_item = resolveComponent(\"el-skeleton-item\");\n\n  return _ctx.uiLoading ? (openBlock(), createElementBlock(\"div\", mergeProps({\n    key: 0,\n    class: [_ctx.ns.b(), _ctx.ns.is(\"animated\", _ctx.animated)]\n  }, _ctx.$attrs), [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.count, i => {\n    return openBlock(), createElementBlock(Fragment, {\n      key: i\n    }, [_ctx.loading ? renderSlot(_ctx.$slots, \"template\", {\n      key: i\n    }, () => [createVNode(_component_el_skeleton_item, {\n      class: normalizeClass(_ctx.ns.is(\"first\")),\n      variant: \"p\"\n    }, null, 8, [\"class\"]), (openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.rows, item => {\n      return openBlock(), createBlock(_component_el_skeleton_item, {\n        key: item,\n        class: normalizeClass([_ctx.ns.e(\"paragraph\"), _ctx.ns.is(\"last\", item === _ctx.rows && _ctx.rows > 1)]),\n        variant: \"p\"\n      }, null, 8, [\"class\"]);\n    }), 128))]) : createCommentVNode(\"v-if\", true)], 64);\n  }), 128))], 16)) : renderSlot(_ctx.$slots, \"default\", normalizeProps(mergeProps({\n    key: 1\n  }, _ctx.$attrs)));\n}\n\nvar Skeleton = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Skeleton as default };","map":{"version":3,"mappings":";;;;;;;;AA8BA,MAAKA,YAAaC,gBAAa;AAC7BC,QAAM,YADuB;AAE7BC,cAAY;AAAA,KACTC,aAAaF,IADJ,GACWE;AADX,GAFiB;AAK7BC,SAAOC,aALsB;;AAM7BC,QAAMF,KAAN,EAAa;AACX,UAAMG,KAAKC,aAAa,UAAb,CAAX;AACA,UAAMC,eAAeC,SAAS,MAAM;AAClC,aAAON,MAAMO,OAAb;AAAa,KADM,CAArB;AAIA,UAAMC,YAAYC,kBAAkBJ,YAAlB,EAAgCL,MAAMU,QAAtC,CAAlB;AAEA,WAAO;AACLP,QADK;AAELK;AAFK,KAAP;AAEE;;AAhByB,CAAb,CAAlB;;;;;SA7BkBG,+BACdC,mBAeM,KAfNA,aAeM;AAAAC;AAfAC,WAAK,CAAGH,QAAGI,CAAH,EAAH,EAAWJ,QAAGK,EAAH,CAAK,UAAL,EAAkBL,aAAlB,CAAX;AAeL,GAfNM,EAA4DN,WAA5DM,GAAkE,mBAChEL,mBAaWM,QAbXN,EAaWM,IAbXN,EAaWM,WAbWP,UAaXO,EAbMC,CAAU,IAAT;;WAAiBA;OAAC,CACtBR,eAAZS,WAWOT,WAXPS,EAWO,UAXPA,EAWO;AAXeP,WAAKM;AAWpB,KAXPC,QAWO,CAVLC,YAAwDC,2BAAxDD,EAAwD;AAArCP,aAAKS,eAAEZ,QAAGK,EAAH,CAAK,OAAL,CAAFO,CAAgC;AAAdC,eAAQ;AAAM,KAAxDH,EAAkD,IAAlDA,EAAkD,CAAlDA,EAAkD,SAAlDA,CAUK,oBATLT,mBAQEM,QARFN,EAQEM,IARFN,EAQEM,WAPeP,SAOfO,EAPOO,IAAY,IAAR;0BADbC,YAQEJ,2BARFI,EAQE;AANCb,aAAKY,IAMN;AALCX,eAAKS,gBAAkBZ,QAAGgB,CAAH,CAAI,WAAJ,CAAlBJ,EAAmDZ,QAAGK,EAAH,CAAK,MAAL,EAAcS,SAASd,SAAT,IAAiBA,YAAI,CAAnC,CAAnDY,EAKN;AADAC,iBAAQ;AACR,OARFE,EAOU,IAPVA,EAOU,CAPVA,EAOU,SAPVA;KAQER,CARFN,MASK,EAXPQ,CAAY,mCADsB;GAazBF,CAbXN,MADgE,EAAlEA,KADc,IAmBdQ,WAA6BT,WAA7BS,EAA6B,SAA7BA,EAA6BQ;AAAAf;AAAA,KAAfF,WAAe,EAA7BS;AAAc","names":["_sfc_main","defineComponent","name","components","SkeletonItem","props","skeletonProps","setup","ns","useNamespace","innerLoading","computed","loading","uiLoading","useThrottleRender","throttle","_ctx","_createElementBlock","key","class","b","is","_mergeProps","_Fragment","i","_renderSlot","_createVNode","_component_el_skeleton_item","_normalizeClass","variant","item","_createBlock","e","normalizeProps"],"sources":["../../../../../../packages/components/skeleton/src/skeleton.vue"],"sourcesContent":["<template>\n  <template v-if=\"uiLoading\">\n    <div :class=\"[ns.b(), ns.is('animated', animated)]\" v-bind=\"$attrs\">\n      <template v-for=\"i in count\" :key=\"i\">\n        <slot v-if=\"loading\" :key=\"i\" name=\"template\">\n          <el-skeleton-item :class=\"ns.is('first')\" variant=\"p\" />\n          <el-skeleton-item\n            v-for=\"item in rows\"\n            :key=\"item\"\n            :class=\"[\n              ns.e('paragraph'),\n              ns.is('last', item === rows && rows > 1),\n            ]\"\n            variant=\"p\"\n          />\n        </slot>\n      </template>\n    </div>\n  </template>\n  <template v-else>\n    <slot v-bind=\"$attrs\"></slot>\n  </template>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed } from 'vue'\nimport { useNamespace, useThrottleRender } from '@element-plus/hooks'\nimport SkeletonItem from './skeleton-item.vue'\nimport { skeletonProps } from './skeleton'\n\nexport default defineComponent({\n  name: 'ElSkeleton',\n  components: {\n    [SkeletonItem.name]: SkeletonItem,\n  },\n  props: skeletonProps,\n  setup(props) {\n    const ns = useNamespace('skeleton')\n    const innerLoading = computed(() => {\n      return props.loading\n    })\n\n    const uiLoading = useThrottleRender(innerLoading, props.throttle)\n\n    return {\n      ns,\n      uiLoading,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}