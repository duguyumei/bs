{"ast":null,"code":"import request from \"@/utils/requst\";\nimport $ from \"@/assets/js/jquery-3.6.0.min\";\nexport default {\n  name: \"register\",\n\n  data() {\n    return {\n      form: {},\n      repassword: \"\"\n    };\n  },\n\n  methods: {\n    //记录图片路径\n    filesUploadSuccess(res, file, fileList) {\n      console.log(res);\n\n      if (this.form.documents == null || this.form.documents == \"\") {\n        this.form.documents = \"\";\n        this.form.documents = res.data;\n      } else {\n        this.form.documents = this.form.documents + \"---\" + res.data;\n      }\n\n      console.log(this.form.documents);\n    },\n\n    //申请注册\n    register() {\n      this.form.status = -1;\n      request.post(\"/user\", this.form).then(res => {\n        if (res.code === '0') {\n          this.$message({\n            type: \"success\",\n            message: \"申请成功\"\n          });\n          this.$router.push('/login');\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg()\n          });\n        }\n      });\n    },\n\n    beforeAvatarUpload: function (file) {\n      const isJPG = file.type === 'image/jpeg';\n      const isPNG = file.type === 'image/png';\n      const isPG = isJPG || isPNG; //限制图片格式为jpg / png\n\n      const isLt2M = file.size / 1024 / 1024 < 2; //限制图片大小\n\n      const isSize = new Promise(function (resolve, reject) {\n        let width = 0;\n        let height = 0;\n\n        let _URL = window.URL || window.webkitURL;\n\n        let img = new Image();\n\n        img.onload = function () {\n          let valid = img.width >= width && img.height >= height;\n          valid ? resolve() : reject();\n        };\n\n        img.src = _URL.createObjectURL(file);\n      }).then(() => {\n        return file;\n      }, () => {\n        this.$message.error('上传图片像素要大于600*400!');\n        return promise.reject();\n      });\n\n      if (!isPG) {\n        this.$message.error('上传图片只能是 JPG 或 PNG 格式!');\n      }\n\n      if (!isLt2M) {\n        this.$message.error('上传图片大小不能超过 2MB!');\n      }\n\n      return isPG && isLt2M && isSize;\n    },\n    exceed: function () {\n      this.$message.error('最多只能上传3张图片');\n    },\n    isOnly: function () {\n      var that = this;\n\n      if (this.form.username == null || this.form.password == null || this.form.phone == null || this.form.name == null || this.form.address == null || this.form.documents == null) {\n        alert(\"请输入完整信息\");\n      } else {\n        var url = \"user/isOnly?name=\" + this.form.name + \"&username=\" + this.form.username;\n        request.get(url).then(res => {\n          if (res.code == -1) {\n            alert(res.msg);\n          } else {\n            that.addrHand();\n          }\n        });\n      }\n    },\n\n    addrHand() {\n      let that = this;\n      $.ajax({\n        type: \"get\",\n        dataType: 'jsonp',\n        data: {\n          key: \"UUNBZ-LV6WP-QCQDR-LE267-R3R76-D6BM6\",\n          // 填申请到的腾讯key\n          address: that.form.address,\n          //具体的地址\n          output: 'jsonp' //返回格式：支持JSON/JSONP，默认JSON\n\n        },\n        jsonp: \"callback\",\n        jsonpCallback: \"QQmap\",\n        url: \"https://apis.map.qq.com/ws/geocoder/v1/?\",\n        success: function (json) {\n          console.log(json);\n\n          if (json.status == 0) {\n            that.form.latitude = json.result.location.lat;\n            that.form.longitude = json.result.location.lng; // that.$message({\n            //     message: '成功获取位置的经纬度',\n            //     type: 'success'\n            // })\n\n            that.register();\n          } else {\n            that.$message.error('获取该位置经纬度失败');\n          }\n        },\n        error: function (err) {\n          that.$message.error('异常错误，请刷新浏览器后重试');\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["request","$","name","data","form","repassword","methods","filesUploadSuccess","res","file","fileList","console","log","documents","register","status","post","then","code","$message","type","message","$router","push","msg","beforeAvatarUpload","isJPG","isPNG","isPG","isLt2M","size","isSize","Promise","resolve","reject","width","height","_URL","window","URL","webkitURL","img","Image","onload","valid","src","createObjectURL","error","promise","exceed","isOnly","that","username","password","phone","address","alert","url","get","addrHand","ajax","dataType","key","output","jsonp","jsonpCallback","success","json","latitude","result","location","lat","longitude","lng","err"],"sourceRoot":"","sources":["E:\\notejs\\manage\\vue\\src\\views\\register.vue"],"sourcesContent":["<template>\r\n    <div class=\"register\">\r\n        <div class=\"img\"><img src=\"../assets/register.png\" alt=\"picture\"></div>\r\n        <div class=\"register_main\">\r\n        <el-form  ref=\"form\" :model=\"form\" :label-position=\"left\">\r\n            <el-form-item>\r\n                <el-input class=\"input\" size=\"large\" v-model=\"form.username\" prefix-icon=\"Avatar\" placeholder=\"请输入账号\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-input class=\"input\" size=\"large\" v-model=\"form.password\" prefix-icon=\"lock\" placeholder=\"请输入密码\" show-password></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-input class=\"input\" size=\"large\" v-model=\"repassword\" prefix-icon=\"lock\" placeholder=\"请确认密码\" show-password></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-input class=\"input\" size=\"large\" v-model=\"form.phone\" prefix-icon=\"Iphone\" placeholder=\"请填写手机号码\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-input class=\"input\" size=\"large\" v-model=\"form.name\" prefix-icon=\"house\" placeholder=\"请输入店名\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-input class=\"input\" size=\"large\" v-model=\"form.address\" prefix-icon=\"location\" placeholder=\"请填写实体店地址\"></el-input>\r\n            </el-form-item>\r\n            <el-form-item>\r\n                <el-input class=\"input\" size=\"large\" v-model=\"form.message\" prefix-icon=\"document\" placeholder=\"请填写描述\"></el-input>\r\n            </el-form-item>\r\n<!--            上传证件照片-->\r\n            <el-upload action = \"http://localhost:8090/files/upload/\"\r\n            list-type = \"picture-card\"\r\n            :class = \"{disabled:isMax}\"\r\n            :limit = 5\r\n            :on-success = \"filesUploadSuccess\"\r\n            :on-exceed = \"exceed\"\r\n            :before-upload = \"beforeAvatarUpload\">\r\n            <i class=\"el-icon-upload\"></i>\r\n            <div class=\"el-upload__text\">上传证件照片</div>\r\n            </el-upload>\r\n            <el-form-item style=\"align-content: center \">\r\n                <el-button class=\"btn_login\" style=\"width: 100%;height: 40px\" type=\"primary\" @click=\"isOnly\">注册</el-button>\r\n            </el-form-item>\r\n        </el-form>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import request from \"@/utils/requst\";\r\n    import $ from \"@/assets/js/jquery-3.6.0.min\"\r\n\r\n    export default {\r\n        name: \"register\",\r\n        data(){\r\n            return{\r\n                form:{\r\n                },\r\n                repassword:\"\"\r\n            }\r\n        },\r\n        methods: {\r\n            //记录图片路径\r\n            filesUploadSuccess(res, file, fileList) {\r\n                console.log(res);\r\n                if (this.form.documents == null || this.form.documents == \"\") {\r\n                    this.form.documents = \"\";\r\n                    this.form.documents = res.data\r\n                } else {\r\n                    this.form.documents = this.form.documents + \"---\" + res.data;\r\n                }\r\n                console.log(this.form.documents);\r\n            },\r\n            //申请注册\r\n            register() {\r\n                this.form.status = -1;\r\n                request.post(\"/user\", this.form).then(res => {\r\n                    if (res.code === '0') {\r\n                        this.$message({\r\n                            type: \"success\",\r\n                            message: \"申请成功\"\r\n                        });\r\n                        this.$router.push('/login');\r\n                    } else {\r\n                        this.$message({\r\n                            type: \"error\",\r\n                            message: res.msg()\r\n                        })\r\n                    }\r\n                });\r\n            },\r\n            beforeAvatarUpload: function (file) {\r\n                const isJPG = file.type === 'image/jpeg';\r\n                const isPNG = file.type === 'image/png';\r\n                const isPG = (isJPG || isPNG)                                       //限制图片格式为jpg / png\r\n                const isLt2M = file.size / 1024 / 1024 < 2;                         //限制图片大小\r\n                const isSize = new Promise(function (resolve, reject) {\r\n                    let width = 0\r\n                    let height = 0\r\n                    let _URL = window.URL || window.webkitURL\r\n                    let img = new Image()\r\n                    img.onload = function () {\r\n                        let valid = img.width >= width && img.height >= height\r\n                        valid ? resolve() : reject();\r\n                    }\r\n                    img.src = _URL.createObjectURL(file)\r\n                }).then(() => {\r\n                    return file;\r\n                }, () => {\r\n                    this.$message.error('上传图片像素要大于600*400!');\r\n                    return promise.reject();\r\n                })\r\n                if (!isPG) {\r\n                    this.$message.error('上传图片只能是 JPG 或 PNG 格式!');\r\n                }\r\n                if (!isLt2M) {\r\n                    this.$message.error('上传图片大小不能超过 2MB!');\r\n                }\r\n                return isPG && isLt2M && isSize\r\n            },\r\n            exceed: function () {\r\n                this.$message.error('最多只能上传3张图片')\r\n            },\r\n            isOnly:function(){\r\n                var that = this;\r\n                if(this.form.username == null || this.form.password == null || this.form.phone == null || this.form.name == null || this.form.address == null || this.form.documents == null){\r\n                    alert(\"请输入完整信息\");\r\n                }\r\n                else{\r\n                    var url = \"user/isOnly?name=\" + this.form.name + \"&username=\" + this.form.username;\r\n                    request.get(url).then(res =>{\r\n                        if(res.code == -1){\r\n                            alert(res.msg);\r\n                        }else{\r\n                            that.addrHand();\r\n                        }\r\n                    })\r\n                }\r\n            },\r\n            addrHand () {\r\n                let that = this\r\n                $.ajax({\r\n                    type: \"get\",\r\n                    dataType: 'jsonp',\r\n                    data: {\r\n                        key: \"UUNBZ-LV6WP-QCQDR-LE267-R3R76-D6BM6\", // 填申请到的腾讯key\r\n                        address: that.form.address, //具体的地址\r\n                        output: 'jsonp' //返回格式：支持JSON/JSONP，默认JSON\r\n                    },\r\n                    jsonp: \"callback\",\r\n                    jsonpCallback: \"QQmap\",\r\n                    url: \"https://apis.map.qq.com/ws/geocoder/v1/?\",\r\n                    success: function (json) {\r\n                        console.log(json)\r\n                        if (json.status == 0) {\r\n                            that.form.latitude = json.result.location.lat\r\n                            that.form.longitude = json.result.location.lng\r\n                            // that.$message({\r\n                            //     message: '成功获取位置的经纬度',\r\n                            //     type: 'success'\r\n                            // })\r\n                            that.register();\r\n                        } else {\r\n                            that.$message.error('获取该位置经纬度失败')\r\n                        }\r\n                    },\r\n                    error: function (err) {\r\n                        that.$message.error('异常错误，请刷新浏览器后重试')\r\n                    }\r\n                })\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n    @import \"../assets/css/register.css\";\r\n</style>"]},"metadata":{},"sourceType":"module"}