{"ast":null,"code":"import { defineComponent, vModelText, provide, reactive, toRefs, resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createVNode, withCtx, createElementVNode, renderSlot, createCommentVNode, normalizeStyle, toDisplayString, createBlock, Fragment, renderList, withKeys, resolveDynamicComponent, vShow, normalizeProps, guardReactiveProps } from 'vue';\nimport '../../../directives/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../constants/index.mjs';\nimport _sfc_main$1 from './select-dropdown.mjs';\nimport useSelect from './useSelect.mjs';\nimport { selectV2InjectionKey } from './token.mjs';\nimport { SelectProps } from './defaults.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElSelectV2\",\n  components: {\n    ElSelectMenu: _sfc_main$1,\n    ElTag,\n    ElTooltip,\n    ElIcon\n  },\n  directives: {\n    ClickOutside,\n    ModelText: vModelText\n  },\n  props: SelectProps,\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"remove-tag\", \"clear\", \"visible-change\", \"focus\", \"blur\"],\n\n  setup(props, {\n    emit\n  }) {\n    const API = useSelect(props, emit);\n    provide(selectV2InjectionKey, {\n      props: reactive({ ...toRefs(props),\n        height: API.popupHeight\n      }),\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect\n    });\n    return API;\n  }\n\n});\n\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"id\", \"autocomplete\", \"aria-expanded\", \"aria-labelledby\", \"disabled\", \"readonly\", \"name\", \"unselectable\"];\nconst _hoisted_3 = [\"textContent\"];\nconst _hoisted_4 = [\"id\", \"aria-labelledby\", \"aria-expanded\", \"autocomplete\", \"disabled\", \"name\", \"readonly\", \"unselectable\"];\nconst _hoisted_5 = [\"textContent\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = resolveComponent(\"el-tag\");\n\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  const _component_el_select_menu = resolveComponent(\"el-select-menu\");\n\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  const _directive_model_text = resolveDirective(\"model-text\");\n\n  const _directive_click_outside = resolveDirective(\"click-outside\");\n\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"selectRef\",\n    class: normalizeClass([_ctx.nsSelectV2.b(), _ctx.nsSelectV2.m(_ctx.selectSize)]),\n    onClick: _cache[24] || (_cache[24] = withModifiers((...args) => _ctx.toggleMenu && _ctx.toggleMenu(...args), [\"stop\"])),\n    onMouseenter: _cache[25] || (_cache[25] = $event => _ctx.states.comboBoxHovering = true),\n    onMouseleave: _cache[26] || (_cache[26] = $event => _ctx.states.comboBoxHovering = false)\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"popper\",\n    visible: _ctx.dropdownMenuVisible,\n    \"onUpdate:visible\": _cache[22] || (_cache[22] = $event => _ctx.dropdownMenuVisible = $event),\n    teleported: _ctx.compatTeleported,\n    \"popper-class\": [_ctx.nsSelectV2.e(\"popper\"), _ctx.popperClass],\n    \"gpu-acceleration\": false,\n    \"stop-popper-mouse-event\": false,\n    \"popper-options\": _ctx.popperOptions,\n    \"fallback-placements\": [\"bottom-start\", \"top-start\", \"right\", \"left\"],\n    effect: _ctx.effect,\n    placement: \"bottom-start\",\n    pure: \"\",\n    transition: `${_ctx.nsSelectV2.namespace.value}-zoom-in-top`,\n    trigger: \"click\",\n    persistent: _ctx.persistent,\n    onShow: _ctx.handleMenuEnter,\n    onHide: _cache[23] || (_cache[23] = $event => _ctx.states.inputValue = _ctx.states.displayInputValue)\n  }, {\n    default: withCtx(() => {\n      var _a;\n\n      return [createElementVNode(\"div\", {\n        ref: \"selectionRef\",\n        class: normalizeClass([_ctx.nsSelectV2.e(\"wrapper\"), _ctx.nsSelectV2.is(\"focused\", _ctx.states.isComposing), _ctx.nsSelectV2.is(\"hovering\", _ctx.states.comboBoxHovering), _ctx.nsSelectV2.is(\"filterable\", _ctx.filterable), _ctx.nsSelectV2.is(\"disabled\", _ctx.selectDisabled)])\n      }, [_ctx.$slots.prefix ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"prefix\")])) : createCommentVNode(\"v-if\", true), _ctx.multiple ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"selection\"))\n      }, [_ctx.collapseTags && _ctx.modelValue.length > 0 ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"selected-item\"))\n      }, [createVNode(_component_el_tag, {\n        closable: !_ctx.selectDisabled && !((_a = _ctx.states.cachedOptions[0]) == null ? void 0 : _a.disable),\n        size: _ctx.collapseTagSize,\n        type: \"info\",\n        \"disable-transitions\": \"\",\n        onClose: _cache[0] || (_cache[0] = $event => _ctx.deleteTag($event, _ctx.states.cachedOptions[0]))\n      }, {\n        default: withCtx(() => {\n          var _a2;\n\n          return [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: `${_ctx.tagMaxWidth}px`\n            })\n          }, toDisplayString((_a2 = _ctx.states.cachedOptions[0]) == null ? void 0 : _a2.label), 7)];\n        }),\n        _: 1\n      }, 8, [\"closable\", \"size\"]), _ctx.modelValue.length > 1 ? (openBlock(), createBlock(_component_el_tag, {\n        key: 0,\n        closable: false,\n        size: _ctx.collapseTagSize,\n        type: \"info\",\n        \"disable-transitions\": \"\"\n      }, {\n        default: withCtx(() => [createElementVNode(\"span\", {\n          class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n          style: normalizeStyle({\n            maxWidth: `${_ctx.tagMaxWidth}px`\n          })\n        }, \"+ \" + toDisplayString(_ctx.modelValue.length - 1), 7)]),\n        _: 1\n      }, 8, [\"size\"])) : createCommentVNode(\"v-if\", true)], 2)) : (openBlock(true), createElementBlock(Fragment, {\n        key: 1\n      }, renderList(_ctx.states.cachedOptions, (selected, idx) => {\n        return openBlock(), createElementBlock(\"div\", {\n          key: idx,\n          class: normalizeClass(_ctx.nsSelectV2.e(\"selected-item\"))\n        }, [(openBlock(), createBlock(_component_el_tag, {\n          key: _ctx.getValueKey(selected),\n          closable: !_ctx.selectDisabled && !selected.disabled,\n          size: _ctx.collapseTagSize,\n          type: \"info\",\n          \"disable-transitions\": \"\",\n          onClose: $event => _ctx.deleteTag($event, selected)\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: `${_ctx.tagMaxWidth}px`\n            })\n          }, toDisplayString(_ctx.getLabel(selected)), 7)]),\n          _: 2\n        }, 1032, [\"closable\", \"size\", \"onClose\"]))], 2);\n      }), 128)), createElementVNode(\"div\", {\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-wrapper\")]),\n        style: normalizeStyle(_ctx.inputWrapperStyle)\n      }, [withDirectives(createElementVNode(\"input\", {\n        id: _ctx.id,\n        ref: \"inputRef\",\n        autocomplete: _ctx.autocomplete,\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        autocapitalize: \"off\",\n        \"aria-expanded\": _ctx.expanded,\n        \"aria-labelledby\": _ctx.label,\n        class: normalizeClass([_ctx.nsSelectV2.is(_ctx.selectSize), _ctx.nsSelectV2.e(\"combobox-input\")]),\n        disabled: _ctx.disabled,\n        role: \"combobox\",\n        readonly: !_ctx.filterable,\n        spellcheck: \"false\",\n        type: \"text\",\n        name: _ctx.name,\n        unselectable: _ctx.expanded ? \"on\" : void 0,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = (...args) => _ctx.onUpdateInputValue && _ctx.onUpdateInputValue(...args)),\n        onFocus: _cache[2] || (_cache[2] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n        onInput: _cache[3] || (_cache[3] = (...args) => _ctx.onInput && _ctx.onInput(...args)),\n        onCompositionstart: _cache[4] || (_cache[4] = (...args) => _ctx.handleCompositionStart && _ctx.handleCompositionStart(...args)),\n        onCompositionupdate: _cache[5] || (_cache[5] = (...args) => _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate(...args)),\n        onCompositionend: _cache[6] || (_cache[6] = (...args) => _ctx.handleCompositionEnd && _ctx.handleCompositionEnd(...args)),\n        onKeydown: [_cache[7] || (_cache[7] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"backward\"), [\"stop\", \"prevent\"]), [\"up\"])), _cache[8] || (_cache[8] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"forward\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[9] || (_cache[9] = withKeys(withModifiers((...args) => _ctx.onKeyboardSelect && _ctx.onKeyboardSelect(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[10] || (_cache[10] = withKeys(withModifiers((...args) => _ctx.handleEsc && _ctx.handleEsc(...args), [\"stop\", \"prevent\"]), [\"esc\"])), _cache[11] || (_cache[11] = withKeys(withModifiers((...args) => _ctx.handleDel && _ctx.handleDel(...args), [\"stop\"]), [\"delete\"]))]\n      }, null, 42, _hoisted_2), [[_directive_model_text, _ctx.states.displayInputValue]]), _ctx.filterable ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        ref: \"calculatorRef\",\n        \"aria-hidden\": \"true\",\n        class: normalizeClass(_ctx.nsSelectV2.e(\"input-calculator\")),\n        textContent: toDisplayString(_ctx.states.displayInputValue)\n      }, null, 10, _hoisted_3)) : createCommentVNode(\"v-if\", true)], 6)], 2)) : (openBlock(), createElementBlock(Fragment, {\n        key: 2\n      }, [createElementVNode(\"div\", {\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-wrapper\")])\n      }, [withDirectives(createElementVNode(\"input\", {\n        id: _ctx.id,\n        ref: \"inputRef\",\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-labelledby\": _ctx.label,\n        \"aria-expanded\": _ctx.expanded,\n        autocapitalize: \"off\",\n        autocomplete: _ctx.autocomplete,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"combobox-input\")),\n        disabled: _ctx.disabled,\n        name: _ctx.name,\n        role: \"combobox\",\n        readonly: !_ctx.filterable,\n        spellcheck: \"false\",\n        type: \"text\",\n        unselectable: _ctx.expanded ? \"on\" : void 0,\n        onCompositionstart: _cache[12] || (_cache[12] = (...args) => _ctx.handleCompositionStart && _ctx.handleCompositionStart(...args)),\n        onCompositionupdate: _cache[13] || (_cache[13] = (...args) => _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate(...args)),\n        onCompositionend: _cache[14] || (_cache[14] = (...args) => _ctx.handleCompositionEnd && _ctx.handleCompositionEnd(...args)),\n        onFocus: _cache[15] || (_cache[15] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n        onInput: _cache[16] || (_cache[16] = (...args) => _ctx.onInput && _ctx.onInput(...args)),\n        onKeydown: [_cache[17] || (_cache[17] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"backward\"), [\"stop\", \"prevent\"]), [\"up\"])), _cache[18] || (_cache[18] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"forward\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[19] || (_cache[19] = withKeys(withModifiers((...args) => _ctx.onKeyboardSelect && _ctx.onKeyboardSelect(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[20] || (_cache[20] = withKeys(withModifiers((...args) => _ctx.handleEsc && _ctx.handleEsc(...args), [\"stop\", \"prevent\"]), [\"esc\"]))],\n        \"onUpdate:modelValue\": _cache[21] || (_cache[21] = (...args) => _ctx.onUpdateInputValue && _ctx.onUpdateInputValue(...args))\n      }, null, 42, _hoisted_4), [[_directive_model_text, _ctx.states.displayInputValue]])], 2), _ctx.filterable ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        ref: \"calculatorRef\",\n        \"aria-hidden\": \"true\",\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-calculator\")]),\n        textContent: toDisplayString(_ctx.states.displayInputValue)\n      }, null, 10, _hoisted_5)) : createCommentVNode(\"v-if\", true)], 64)), _ctx.shouldShowPlaceholder ? (openBlock(), createElementBlock(\"span\", {\n        key: 3,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"placeholder\"), _ctx.nsSelectV2.is(\"transparent\", _ctx.states.isComposing || (_ctx.placeholder && _ctx.multiple ? _ctx.modelValue.length === 0 : !_ctx.hasModelValue))])\n      }, toDisplayString(_ctx.currentPlaceholder), 3)) : createCommentVNode(\"v-if\", true), createElementVNode(\"span\", {\n        class: normalizeClass(_ctx.nsSelectV2.e(\"suffix\"))\n      }, [_ctx.iconComponent ? withDirectives((openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"caret\"), _ctx.nsInput.e(\"icon\"), _ctx.iconReverse])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n        _: 1\n      }, 8, [\"class\"])), [[vShow, !_ctx.showClearBtn]]) : createCommentVNode(\"v-if\", true), _ctx.showClearBtn && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 1,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"caret\"), _ctx.nsInput.e(\"icon\")]),\n        onClick: withModifiers(_ctx.handleClear, [\"prevent\", \"stop\"])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.validateState && _ctx.validateIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 2,\n        class: normalizeClass([_ctx.nsInput.e(\"icon\"), _ctx.nsInput.e(\"validateIcon\")])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.validateIcon)))]),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 2)], 2)];\n    }),\n    content: withCtx(() => [createVNode(_component_el_select_menu, {\n      ref: \"menuRef\",\n      data: _ctx.filteredOptions,\n      width: _ctx.popperSize,\n      \"hovering-index\": _ctx.states.hoveringIndex,\n      \"scrollbar-always-on\": _ctx.scrollbarAlwaysOn\n    }, {\n      default: withCtx(scope => [renderSlot(_ctx.$slots, \"default\", normalizeProps(guardReactiveProps(scope)))]),\n      empty: withCtx(() => [renderSlot(_ctx.$slots, \"empty\", {}, () => [createElementVNode(\"p\", {\n        class: normalizeClass(_ctx.nsSelectV2.e(\"empty\"))\n      }, toDisplayString(_ctx.emptyText ? _ctx.emptyText : \"\"), 3)])]),\n      _: 3\n    }, 8, [\"data\", \"width\", \"hovering-index\", \"scrollbar-always-on\"])]),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"popper-options\", \"effect\", \"transition\", \"persistent\", \"onShow\"])], 34)), [[_directive_click_outside, _ctx.handleClickOutside, _ctx.popperRef]]);\n}\n\nvar Select = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Select as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElSelectMenu","ElTag","ElTooltip","ElIcon","directives","ClickOutside","ModelText","vModelText","props","SelectProps","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","emit","API","useSelect","provide","selectV2InjectionKey","reactive","toRefs","height","popupHeight","onSelect","onHover","onKeyboardNavigate","onKeyboardSelect","_createElementBlock","ref","class","_normalizeClass","_ctx","b","m","onClick","_cache","onMouseenter","comboBoxHovering","onMouseleave","_createVNode","_component_el_tooltip","visible","$event","teleported","e","effect","placement","pure","transition","namespace","value","trigger","persistent","onShow","onHide","inputValue","displayInputValue","default","_withCtx","_createElementVNode","createCommentVNode","key","closable","size","type","createElementVNode","style","maxWidth","_","_openBlock","openBlock","onClose","_withDirectives","id","autocomplete","autocapitalize","disabled","role","readonly","spellcheck","unselectable","expanded","onFocus","onInput","onCompositionstart","onCompositionupdate","onCompositionend","onKeydown","textContent","_hoisted_3","_hoisted_4","_directive_model_text","_hoisted_5","toDisplayString","createBlock","content","createVNode","data","width","hoveringIndex","renderSlot","empty"],"sources":["../../../../../../packages/components/select-v2/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelectV2.b(), nsSelectV2.m(selectSize)]\"\n    @click.stop=\"toggleMenu\"\n    @mouseenter=\"states.comboBoxHovering = true\"\n    @mouseleave=\"states.comboBoxHovering = false\"\n  >\n    <el-tooltip\n      ref=\"popper\"\n      v-model:visible=\"dropdownMenuVisible\"\n      :teleported=\"compatTeleported\"\n      :popper-class=\"[nsSelectV2.e('popper'), popperClass]\"\n      :gpu-acceleration=\"false\"\n      :stop-popper-mouse-event=\"false\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"['bottom-start', 'top-start', 'right', 'left']\"\n      :effect=\"effect\"\n      placement=\"bottom-start\"\n      pure\n      :transition=\"`${nsSelectV2.namespace.value}-zoom-in-top`\"\n      trigger=\"click\"\n      :persistent=\"persistent\"\n      @show=\"handleMenuEnter\"\n      @hide=\"states.inputValue = states.displayInputValue\"\n    >\n      <template #default>\n        <div\n          ref=\"selectionRef\"\n          :class=\"[\n            nsSelectV2.e('wrapper'),\n            nsSelectV2.is('focused', states.isComposing),\n            nsSelectV2.is('hovering', states.comboBoxHovering),\n            nsSelectV2.is('filterable', filterable),\n            nsSelectV2.is('disabled', selectDisabled),\n          ]\"\n        >\n          <div v-if=\"$slots.prefix\">\n            <slot name=\"prefix\"></slot>\n          </div>\n          <div v-if=\"multiple\" :class=\"nsSelectV2.e('selection')\">\n            <template v-if=\"collapseTags && modelValue.length > 0\">\n              <div :class=\"nsSelectV2.e('selected-item')\">\n                <el-tag\n                  :closable=\"\n                    !selectDisabled && !states.cachedOptions[0]?.disable\n                  \"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                  @close=\"deleteTag($event, states.cachedOptions[0])\"\n                >\n                  <span\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >{{ states.cachedOptions[0]?.label }}</span\n                  >\n                </el-tag>\n                <el-tag\n                  v-if=\"modelValue.length > 1\"\n                  :closable=\"false\"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                >\n                  <span\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >+ {{ modelValue.length - 1 }}</span\n                  >\n                </el-tag>\n              </div>\n            </template>\n\n            <template v-else>\n              <div\n                v-for=\"(selected, idx) in states.cachedOptions\"\n                :key=\"idx\"\n                :class=\"nsSelectV2.e('selected-item')\"\n              >\n                <el-tag\n                  :key=\"getValueKey(selected)\"\n                  :closable=\"!selectDisabled && !selected.disabled\"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                  @close=\"deleteTag($event, selected)\"\n                >\n                  <span\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >{{ getLabel(selected) }}</span\n                  >\n                </el-tag>\n              </div>\n            </template>\n            <div\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-wrapper'),\n              ]\"\n              :style=\"inputWrapperStyle\"\n            >\n              <input\n                :id=\"id\"\n                ref=\"inputRef\"\n                v-model-text=\"states.displayInputValue\"\n                :autocomplete=\"autocomplete\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                autocapitalize=\"off\"\n                :aria-expanded=\"expanded\"\n                :aria-labelledby=\"label\"\n                :class=\"[\n                  nsSelectV2.is(selectSize),\n                  nsSelectV2.e('combobox-input'),\n                ]\"\n                :disabled=\"disabled\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :name=\"name\"\n                :unselectable=\"expanded ? 'on' : undefined\"\n                @update:modelValue=\"onUpdateInputValue\"\n                @focus=\"handleFocus\"\n                @input=\"onInput\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.delete.stop=\"handleDel\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelectV2.e('input-calculator')\"\n                v-text=\"states.displayInputValue\"\n              >\n              </span>\n            </div>\n          </div>\n          <template v-else>\n            <div\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-wrapper'),\n              ]\"\n            >\n              <input\n                :id=\"id\"\n                ref=\"inputRef\"\n                v-model-text=\"states.displayInputValue\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                :aria-labelledby=\"label\"\n                :aria-expanded=\"expanded\"\n                autocapitalize=\"off\"\n                :autocomplete=\"autocomplete\"\n                :class=\"nsSelectV2.e('combobox-input')\"\n                :disabled=\"disabled\"\n                :name=\"name\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :unselectable=\"expanded ? 'on' : undefined\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @focus=\"handleFocus\"\n                @input=\"onInput\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @update:modelValue=\"onUpdateInputValue\"\n              />\n            </div>\n            <span\n              v-if=\"filterable\"\n              ref=\"calculatorRef\"\n              aria-hidden=\"true\"\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-calculator'),\n              ]\"\n              v-text=\"states.displayInputValue\"\n            >\n            </span>\n          </template>\n          <span\n            v-if=\"shouldShowPlaceholder\"\n            :class=\"[\n              nsSelectV2.e('placeholder'),\n              nsSelectV2.is(\n                'transparent',\n                states.isComposing ||\n                  (placeholder && multiple\n                    ? modelValue.length === 0\n                    : !hasModelValue)\n              ),\n            ]\"\n          >\n            {{ currentPlaceholder }}\n          </span>\n          <span :class=\"nsSelectV2.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent\"\n              v-show=\"!showClearBtn\"\n              :class=\"[nsSelectV2.e('caret'), nsInput.e('icon'), iconReverse]\"\n            >\n              <component :is=\"iconComponent\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[nsSelectV2.e('caret'), nsInput.e('icon')]\"\n              @click.prevent.stop=\"handleClear\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon\"\n              :class=\"[nsInput.e('icon'), nsInput.e('validateIcon')]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </span>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu\n          ref=\"menuRef\"\n          :data=\"filteredOptions\"\n          :width=\"popperSize\"\n          :hovering-index=\"states.hoveringIndex\"\n          :scrollbar-always-on=\"scrollbarAlwaysOn\"\n        >\n          <template #default=\"scope\">\n            <slot v-bind=\"scope\"></slot>\n          </template>\n          <template #empty>\n            <slot name=\"empty\">\n              <p :class=\"nsSelectV2.e('empty')\">\n                {{ emptyText ? emptyText : '' }}\n              </p>\n            </slot>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, provide, toRefs, reactive, vModelText } from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '@element-plus/constants'\nimport ElSelectMenu from './select-dropdown.vue'\nimport useSelect from './useSelect'\nimport { selectV2InjectionKey } from './token'\nimport { SelectProps } from './defaults'\nexport default defineComponent({\n  name: 'ElSelectV2',\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside, ModelText: vModelText },\n  props: SelectProps,\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n  ],\n\n  setup(props, { emit }) {\n    const API = useSelect(props, emit)\n    // TODO, remove the any cast to align the actual API.\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n      }),\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect,\n    } as any)\n\n    return API\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}