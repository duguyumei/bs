{"ast":null,"code":"import { defineComponent, ref, computed, inject, resolveComponent, openBlock, createBlock, Transition, withCtx, createElementBlock, createElementVNode, normalizeClass, createVNode, toDisplayString, createCommentVNode } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../../constants/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport TimeSpinner from './basic-time-spinner.mjs';\nimport { useOldValue, getAvailableArrs } from './useTimePicker.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\n\nconst _sfc_main = defineComponent({\n  components: {\n    TimeSpinner\n  },\n  props: {\n    visible: Boolean,\n    actualVisible: {\n      type: Boolean,\n      default: void 0\n    },\n    datetimeRole: {\n      type: String\n    },\n    parsedValue: {\n      type: [Object, String]\n    },\n    format: {\n      type: String,\n      default: \"\"\n    }\n  },\n  emits: [\"pick\", \"select-range\", \"set-picker-option\"],\n\n  setup(props, ctx) {\n    const {\n      t,\n      lang\n    } = useLocale();\n    const selectionRange = ref([0, 2]);\n    const oldValue = useOldValue(props);\n    const transitionName = computed(() => {\n      return props.actualVisible === void 0 ? \"el-zoom-in-top\" : \"\";\n    });\n    const showSeconds = computed(() => {\n      return props.format.includes(\"ss\");\n    });\n    const amPmMode = computed(() => {\n      if (props.format.includes(\"A\")) return \"A\";\n      if (props.format.includes(\"a\")) return \"a\";\n      return \"\";\n    });\n\n    const isValidValue = _date => {\n      const parsedDate = dayjs(_date).locale(lang.value);\n      const result = getRangeAvailableTime(parsedDate);\n      return parsedDate.isSame(result);\n    };\n\n    const handleCancel = () => {\n      ctx.emit(\"pick\", oldValue.value, false);\n    };\n\n    const handleConfirm = (visible = false, first = false) => {\n      if (first) return;\n      ctx.emit(\"pick\", props.parsedValue, visible);\n    };\n\n    const handleChange = _date => {\n      if (!props.visible) {\n        return;\n      }\n\n      const result = getRangeAvailableTime(_date).millisecond(0);\n      ctx.emit(\"pick\", result, true);\n    };\n\n    const setSelectionRange = (start, end) => {\n      ctx.emit(\"select-range\", start, end);\n      selectionRange.value = [start, end];\n    };\n\n    const changeSelectionRange = step => {\n      const list = [0, 3].concat(showSeconds.value ? [6] : []);\n      const mapping = [\"hours\", \"minutes\"].concat(showSeconds.value ? [\"seconds\"] : []);\n      const index = list.indexOf(selectionRange.value[0]);\n      const next = (index + step + list.length) % list.length;\n      timePickerOptions[\"start_emitSelectRange\"](mapping[next]);\n    };\n\n    const handleKeydown = event => {\n      const code = event.code;\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1;\n        changeSelectionRange(step);\n        event.preventDefault();\n        return;\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1;\n        timePickerOptions[\"start_scrollDown\"](step);\n        event.preventDefault();\n        return;\n      }\n    };\n\n    const getRangeAvailableTime = date => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds\n      };\n      let result = date;\n      [\"hour\", \"minute\", \"second\"].forEach(_ => {\n        if (availableMap[_]) {\n          let availableArr;\n          const method = availableMap[_];\n\n          if (_ === \"minute\") {\n            availableArr = method(result.hour(), props.datetimeRole);\n          } else if (_ === \"second\") {\n            availableArr = method(result.hour(), result.minute(), props.datetimeRole);\n          } else {\n            availableArr = method(props.datetimeRole);\n          }\n\n          if (availableArr && availableArr.length && !availableArr.includes(result[_]())) {\n            result = result[_](availableArr[0]);\n          }\n        }\n      });\n      return result;\n    };\n\n    const parseUserInput = value => {\n      if (!value) return null;\n      return dayjs(value, props.format).locale(lang.value);\n    };\n\n    const formatToString = value => {\n      if (!value) return null;\n      return value.format(props.format);\n    };\n\n    const getDefaultValue = () => {\n      return dayjs(defaultValue).locale(lang.value);\n    };\n\n    ctx.emit(\"set-picker-option\", [\"isValidValue\", isValidValue]);\n    ctx.emit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    ctx.emit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    ctx.emit(\"set-picker-option\", [\"handleKeydown\", handleKeydown]);\n    ctx.emit(\"set-picker-option\", [\"getRangeAvailableTime\", getRangeAvailableTime]);\n    ctx.emit(\"set-picker-option\", [\"getDefaultValue\", getDefaultValue]);\n    const timePickerOptions = {};\n\n    const onSetOption = e => {\n      timePickerOptions[e[0]] = e[1];\n    };\n\n    const pickerBase = inject(\"EP_PICKER_BASE\");\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue\n    } = pickerBase.props;\n    const {\n      getAvailableHours,\n      getAvailableMinutes,\n      getAvailableSeconds\n    } = getAvailableArrs(disabledHours, disabledMinutes, disabledSeconds);\n    return {\n      transitionName,\n      arrowControl,\n      onSetOption,\n      t,\n      handleConfirm,\n      handleChange,\n      setSelectionRange,\n      amPmMode,\n      showSeconds,\n      handleCancel,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds\n    };\n  }\n\n});\n\nconst _hoisted_1 = {\n  key: 0,\n  class: \"el-time-panel\"\n};\nconst _hoisted_2 = {\n  class: \"el-time-panel__footer\"\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_time_spinner = resolveComponent(\"time-spinner\");\n\n  return openBlock(), createBlock(Transition, {\n    name: _ctx.transitionName\n  }, {\n    default: withCtx(() => [_ctx.actualVisible || _ctx.visible ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [createElementVNode(\"div\", {\n      class: normalizeClass([\"el-time-panel__content\", {\n        \"has-seconds\": _ctx.showSeconds\n      }])\n    }, [createVNode(_component_time_spinner, {\n      ref: \"spinner\",\n      role: _ctx.datetimeRole || \"start\",\n      \"arrow-control\": _ctx.arrowControl,\n      \"show-seconds\": _ctx.showSeconds,\n      \"am-pm-mode\": _ctx.amPmMode,\n      \"spinner-date\": _ctx.parsedValue,\n      \"disabled-hours\": _ctx.disabledHours,\n      \"disabled-minutes\": _ctx.disabledMinutes,\n      \"disabled-seconds\": _ctx.disabledSeconds,\n      onChange: _ctx.handleChange,\n      onSetOption: _ctx.onSetOption,\n      onSelectRange: _ctx.setSelectionRange\n    }, null, 8, [\"role\", \"arrow-control\", \"show-seconds\", \"am-pm-mode\", \"spinner-date\", \"disabled-hours\", \"disabled-minutes\", \"disabled-seconds\", \"onChange\", \"onSetOption\", \"onSelectRange\"])], 2), createElementVNode(\"div\", _hoisted_2, [createElementVNode(\"button\", {\n      type: \"button\",\n      class: \"el-time-panel__btn cancel\",\n      onClick: _cache[0] || (_cache[0] = (...args) => _ctx.handleCancel && _ctx.handleCancel(...args))\n    }, toDisplayString(_ctx.t(\"el.datepicker.cancel\")), 1), createElementVNode(\"button\", {\n      type: \"button\",\n      class: \"el-time-panel__btn confirm\",\n      onClick: _cache[1] || (_cache[1] = $event => _ctx.handleConfirm())\n    }, toDisplayString(_ctx.t(\"el.datepicker.confirm\")), 1)])])) : createCommentVNode(\"v-if\", true)]),\n    _: 1\n  }, 8, [\"name\"]);\n}\n\nvar TimePickPanel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { TimePickPanel as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","components","TimeSpinner","props","visible","Boolean","actualVisible","type","default","datetimeRole","String","parsedValue","Object","format","emits","setup","ctx","t","lang","useLocale","selectionRange","ref","oldValue","useOldValue","transitionName","computed","showSeconds","includes","amPmMode","isValidValue","_date","parsedDate","dayjs","locale","value","result","getRangeAvailableTime","isSame","handleCancel","emit","handleConfirm","first","handleChange","millisecond","setSelectionRange","start","end","changeSelectionRange","step","list","concat","mapping","index","indexOf","next","length","timePickerOptions","handleKeydown","event","code","EVENT_CODE","left","right","preventDefault","up","down","date","availableMap","hour","getAvailableHours","minute","getAvailableMinutes","second","getAvailableSeconds","forEach","_","availableArr","method","parseUserInput","formatToString","getDefaultValue","defaultValue","onSetOption","e","pickerBase","inject","arrowControl","disabledHours","disabledMinutes","disabledSeconds","getAvailableArrs","class","_createBlock","_Transition","name","_ctx","openBlock","_createElementBlock","_createElementVNode","_normalizeClass","_createVNode","_component_time_spinner","role","onChange","onSelectRange","onClick","_cache","toDisplayString","createCommentVNode"],"sources":["../../../../../../../packages/components/time-picker/src/time-picker-com/panel-time-pick.vue"],"sourcesContent":["<template>\n  <transition :name=\"transitionName\">\n    <div v-if=\"actualVisible || visible\" class=\"el-time-panel\">\n      <div\n        class=\"el-time-panel__content\"\n        :class=\"{ 'has-seconds': showSeconds }\"\n      >\n        <time-spinner\n          ref=\"spinner\"\n          :role=\"datetimeRole || 'start'\"\n          :arrow-control=\"arrowControl\"\n          :show-seconds=\"showSeconds\"\n          :am-pm-mode=\"amPmMode\"\n          :spinner-date=\"parsedValue\"\n          :disabled-hours=\"disabledHours\"\n          :disabled-minutes=\"disabledMinutes\"\n          :disabled-seconds=\"disabledSeconds\"\n          @change=\"handleChange\"\n          @set-option=\"onSetOption\"\n          @select-range=\"setSelectionRange\"\n        />\n      </div>\n      <div class=\"el-time-panel__footer\">\n        <button\n          type=\"button\"\n          class=\"el-time-panel__btn cancel\"\n          @click=\"handleCancel\"\n        >\n          {{ t('el.datepicker.cancel') }}\n        </button>\n        <button\n          type=\"button\"\n          class=\"el-time-panel__btn confirm\"\n          @click=\"handleConfirm()\"\n        >\n          {{ t('el.datepicker.confirm') }}\n        </button>\n      </div>\n    </div>\n  </transition>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, ref, computed, inject } from 'vue'\nimport dayjs from 'dayjs'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport { useLocale } from '@element-plus/hooks'\nimport TimeSpinner from './basic-time-spinner.vue'\nimport { getAvailableArrs, useOldValue } from './useTimePicker'\n\nimport type { PropType } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nexport default defineComponent({\n  components: {\n    TimeSpinner,\n  },\n\n  props: {\n    visible: Boolean,\n    actualVisible: {\n      type: Boolean,\n      default: undefined,\n    },\n    datetimeRole: {\n      type: String,\n    },\n    parsedValue: {\n      type: [Object, String] as PropType<string | Dayjs>,\n    },\n    format: {\n      type: String,\n      default: '',\n    },\n  },\n\n  emits: ['pick', 'select-range', 'set-picker-option'],\n\n  setup(props, ctx) {\n    const { t, lang } = useLocale()\n    // data\n    const selectionRange = ref([0, 2])\n    const oldValue = useOldValue(props)\n    // computed\n    const transitionName = computed(() => {\n      return props.actualVisible === undefined ? 'el-zoom-in-top' : ''\n    })\n    const showSeconds = computed(() => {\n      return props.format.includes('ss')\n    })\n    const amPmMode = computed(() => {\n      if (props.format.includes('A')) return 'A'\n      if (props.format.includes('a')) return 'a'\n      return ''\n    })\n    // method\n    const isValidValue = (_date: Dayjs) => {\n      const parsedDate = dayjs(_date).locale(lang.value)\n      const result = getRangeAvailableTime(parsedDate)\n      return parsedDate.isSame(result)\n    }\n    const handleCancel = () => {\n      ctx.emit('pick', oldValue.value, false)\n    }\n    const handleConfirm = (visible = false, first = false) => {\n      if (first) return\n      ctx.emit('pick', props.parsedValue, visible)\n    }\n    const handleChange = (_date: Dayjs) => {\n      // visible avoids edge cases, when use scrolls during panel closing animation\n      if (!props.visible) {\n        return\n      }\n      const result = getRangeAvailableTime(_date).millisecond(0)\n      ctx.emit('pick', result, true)\n    }\n\n    const setSelectionRange = (start, end) => {\n      ctx.emit('select-range', start, end)\n      selectionRange.value = [start, end]\n    }\n\n    const changeSelectionRange = (step: number) => {\n      const list = [0, 3].concat(showSeconds.value ? [6] : [])\n      const mapping = ['hours', 'minutes'].concat(\n        showSeconds.value ? ['seconds'] : []\n      )\n      const index = list.indexOf(selectionRange.value[0])\n      const next = (index + step + list.length) % list.length\n      timePickerOptions['start_emitSelectRange'](mapping[next])\n    }\n\n    const handleKeydown = (event: KeyboardEvent) => {\n      const code = event.code\n\n      if (code === EVENT_CODE.left || code === EVENT_CODE.right) {\n        const step = code === EVENT_CODE.left ? -1 : 1\n        changeSelectionRange(step)\n        event.preventDefault()\n        return\n      }\n\n      if (code === EVENT_CODE.up || code === EVENT_CODE.down) {\n        const step = code === EVENT_CODE.up ? -1 : 1\n        timePickerOptions['start_scrollDown'](step)\n        event.preventDefault()\n        return\n      }\n    }\n\n    const getRangeAvailableTime = (date: Dayjs) => {\n      const availableMap = {\n        hour: getAvailableHours,\n        minute: getAvailableMinutes,\n        second: getAvailableSeconds,\n      }\n      let result = date\n      ;['hour', 'minute', 'second'].forEach((_) => {\n        if (availableMap[_]) {\n          let availableArr\n          const method = availableMap[_]\n          if (_ === 'minute') {\n            availableArr = method(result.hour(), props.datetimeRole)\n          } else if (_ === 'second') {\n            availableArr = method(\n              result.hour(),\n              result.minute(),\n              props.datetimeRole\n            )\n          } else {\n            availableArr = method(props.datetimeRole)\n          }\n          if (\n            availableArr &&\n            availableArr.length &&\n            !availableArr.includes(result[_]())\n          ) {\n            result = result[_](availableArr[0])\n          }\n        }\n      })\n      return result\n    }\n\n    const parseUserInput = (value: Dayjs) => {\n      if (!value) return null\n      return dayjs(value, props.format).locale(lang.value)\n    }\n\n    const formatToString = (value: Dayjs) => {\n      if (!value) return null\n      return value.format(props.format)\n    }\n\n    const getDefaultValue = () => {\n      return dayjs(defaultValue).locale(lang.value)\n    }\n\n    ctx.emit('set-picker-option', ['isValidValue', isValidValue])\n    ctx.emit('set-picker-option', ['formatToString', formatToString])\n    ctx.emit('set-picker-option', ['parseUserInput', parseUserInput])\n    ctx.emit('set-picker-option', ['handleKeydown', handleKeydown])\n    ctx.emit('set-picker-option', [\n      'getRangeAvailableTime',\n      getRangeAvailableTime,\n    ])\n    ctx.emit('set-picker-option', ['getDefaultValue', getDefaultValue])\n    const timePickerOptions = {} as any\n    const onSetOption = (e) => {\n      timePickerOptions[e[0]] = e[1]\n    }\n    const pickerBase = inject('EP_PICKER_BASE') as any\n    const {\n      arrowControl,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n      defaultValue,\n    } = pickerBase.props\n    const { getAvailableHours, getAvailableMinutes, getAvailableSeconds } =\n      getAvailableArrs(disabledHours, disabledMinutes, disabledSeconds)\n\n    return {\n      transitionName,\n      arrowControl,\n      onSetOption,\n      t,\n      handleConfirm,\n      handleChange,\n      setSelectionRange,\n      amPmMode,\n      showSeconds,\n      handleCancel,\n      disabledHours,\n      disabledMinutes,\n      disabledSeconds,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}