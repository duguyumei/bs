{"ast":null,"code":"import { defineComponent, ref, computed, onMounted, watch, resolveComponent, openBlock, createBlock, Transition, withCtx, withDirectives, createElementVNode, normalizeClass, normalizeStyle, createCommentVNode, resolveDynamicComponent, renderSlot, createElementBlock, toDisplayString, Fragment, withModifiers, createVNode, vShow } from 'vue';\nimport { useTimeoutFn, useEventListener } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport '../../../constants/index.mjs';\nimport { ElBadge } from '../../badge/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { messageProps, messageEmits } from './message.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { TypeComponents, TypeComponentsMap } from '../../../utils/vue/icon.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { EVENT_CODE } from '../../../constants/aria.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElMessage\",\n  components: {\n    ElBadge,\n    ElIcon,\n    ...TypeComponents\n  },\n  props: messageProps,\n  emits: messageEmits,\n\n  setup(props) {\n    const ns = useNamespace(\"message\");\n    const visible = ref(false);\n    const badgeType = ref(props.type ? props.type === \"error\" ? \"danger\" : props.type : \"info\");\n    let stopTimer = void 0;\n    const typeClass = computed(() => {\n      const type = props.type;\n      return {\n        [ns.bm(\"icon\", type)]: type && TypeComponentsMap[type]\n      };\n    });\n    const iconComponent = computed(() => {\n      return props.icon || TypeComponentsMap[props.type] || \"\";\n    });\n    const customStyle = computed(() => ({\n      top: `${props.offset}px`,\n      zIndex: props.zIndex\n    }));\n\n    function startTimer() {\n      if (props.duration > 0) {\n        ;\n        ({\n          stop: stopTimer\n        } = useTimeoutFn(() => {\n          if (visible.value) close();\n        }, props.duration));\n      }\n    }\n\n    function clearTimer() {\n      stopTimer == null ? void 0 : stopTimer();\n    }\n\n    function close() {\n      visible.value = false;\n    }\n\n    function keydown({\n      code\n    }) {\n      if (code === EVENT_CODE.esc) {\n        if (visible.value) {\n          close();\n        }\n      } else {\n        startTimer();\n      }\n    }\n\n    onMounted(() => {\n      startTimer();\n      visible.value = true;\n    });\n    watch(() => props.repeatNum, () => {\n      clearTimer();\n      startTimer();\n    });\n    useEventListener(document, \"keydown\", keydown);\n    return {\n      ns,\n      typeClass,\n      iconComponent,\n      customStyle,\n      visible,\n      badgeType,\n      close,\n      clearTimer,\n      startTimer\n    };\n  }\n\n});\n\nconst _hoisted_1 = [\"id\"];\nconst _hoisted_2 = [\"innerHTML\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_badge = resolveComponent(\"el-badge\");\n\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  const _component_close = resolveComponent(\"close\");\n\n  return openBlock(), createBlock(Transition, {\n    name: _ctx.ns.b(\"fade\"),\n    onBeforeLeave: _ctx.onClose,\n    onAfterLeave: _cache[2] || (_cache[2] = $event => _ctx.$emit(\"destroy\"))\n  }, {\n    default: withCtx(() => [withDirectives(createElementVNode(\"div\", {\n      id: _ctx.id,\n      class: normalizeClass([_ctx.ns.b(), {\n        [_ctx.ns.m(_ctx.type)]: _ctx.type && !_ctx.icon\n      }, _ctx.ns.is(\"center\", _ctx.center), _ctx.ns.is(\"closable\", _ctx.showClose), _ctx.customClass]),\n      style: normalizeStyle(_ctx.customStyle),\n      role: \"alert\",\n      onMouseenter: _cache[0] || (_cache[0] = (...args) => _ctx.clearTimer && _ctx.clearTimer(...args)),\n      onMouseleave: _cache[1] || (_cache[1] = (...args) => _ctx.startTimer && _ctx.startTimer(...args))\n    }, [_ctx.repeatNum > 1 ? (openBlock(), createBlock(_component_el_badge, {\n      key: 0,\n      value: _ctx.repeatNum,\n      type: _ctx.badgeType,\n      class: normalizeClass(_ctx.ns.e(\"badge\"))\n    }, null, 8, [\"value\", \"type\", \"class\"])) : createCommentVNode(\"v-if\", true), _ctx.iconComponent ? (openBlock(), createBlock(_component_el_icon, {\n      key: 1,\n      class: normalizeClass([_ctx.ns.e(\"icon\"), _ctx.typeClass])\n    }, {\n      default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n      _: 1\n    }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\", {}, () => [!_ctx.dangerouslyUseHTMLString ? (openBlock(), createElementBlock(\"p\", {\n      key: 0,\n      class: normalizeClass(_ctx.ns.e(\"content\"))\n    }, toDisplayString(_ctx.message), 3)) : (openBlock(), createElementBlock(Fragment, {\n      key: 1\n    }, [createCommentVNode(\" Caution here, message could've been compromised, never use user's input as message \"), createElementVNode(\"p\", {\n      class: normalizeClass(_ctx.ns.e(\"content\")),\n      innerHTML: _ctx.message\n    }, null, 10, _hoisted_2)], 2112))]), _ctx.showClose ? (openBlock(), createBlock(_component_el_icon, {\n      key: 2,\n      class: normalizeClass(_ctx.ns.e(\"closeBtn\")),\n      onClick: withModifiers(_ctx.close, [\"stop\"])\n    }, {\n      default: withCtx(() => [createVNode(_component_close)]),\n      _: 1\n    }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)], 46, _hoisted_1), [[vShow, _ctx.visible]])]),\n    _: 3\n  }, 8, [\"name\", \"onBeforeLeave\"]);\n}\n\nvar MessageConstructor = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { MessageConstructor as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElBadge","ElIcon","TypeComponents","props","messageProps","emits","messageEmits","setup","ns","useNamespace","visible","ref","badgeType","type","stopTimer","typeClass","computed","bm","TypeComponentsMap","iconComponent","icon","customStyle","top","offset","zIndex","duration","stop","useTimeoutFn","value","close","code","EVENT_CODE","esc","startTimer","onMounted","watch","repeatNum","clearTimer","useEventListener","document","keydown","_createBlock","_Transition","_ctx","b","onBeforeLeave","onAfterLeave","_cache","_createElementVNode","id","class","_normalizeClass","m","is","style","_normalizeStyle","role","onMouseenter","onMouseleave","openBlock","_component_el_badge","key","e","createCommentVNode","_component_el_icon","_resolveDynamicComponent","_","_renderSlot","_createElementBlock","toDisplayString","_Fragment","_createCommentVNode","innerHTML","_hoisted_2","onClick","_withModifiers","_createVNode","_component_close"],"sources":["../../../../../../packages/components/message/src/message.vue"],"sourcesContent":["<template>\n  <transition\n    :name=\"ns.b('fade')\"\n    @before-leave=\"onClose\"\n    @after-leave=\"$emit('destroy')\"\n  >\n    <div\n      v-show=\"visible\"\n      :id=\"id\"\n      :class=\"[\n        ns.b(),\n        { [ns.m(type)]: type && !icon },\n        ns.is('center', center),\n        ns.is('closable', showClose),\n        customClass,\n      ]\"\n      :style=\"customStyle\"\n      role=\"alert\"\n      @mouseenter=\"clearTimer\"\n      @mouseleave=\"startTimer\"\n    >\n      <el-badge\n        v-if=\"repeatNum > 1\"\n        :value=\"repeatNum\"\n        :type=\"badgeType\"\n        :class=\"ns.e('badge')\"\n      >\n      </el-badge>\n      <el-icon v-if=\"iconComponent\" :class=\"[ns.e('icon'), typeClass]\">\n        <component :is=\"iconComponent\" />\n      </el-icon>\n      <slot>\n        <p v-if=\"!dangerouslyUseHTMLString\" :class=\"ns.e('content')\">\n          {{ message }}\n        </p>\n        <!-- Caution here, message could've been compromised, never use user's input as message -->\n        <p v-else :class=\"ns.e('content')\" v-html=\"message\"></p>\n      </slot>\n      <el-icon v-if=\"showClose\" :class=\"ns.e('closeBtn')\" @click.stop=\"close\">\n        <close />\n      </el-icon>\n    </div>\n  </transition>\n</template>\n<script lang=\"ts\">\nimport { defineComponent, computed, ref, onMounted, watch } from 'vue'\nimport { useEventListener, useTimeoutFn } from '@vueuse/core'\nimport { TypeComponents, TypeComponentsMap } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport ElBadge from '@element-plus/components/badge'\nimport { ElIcon } from '@element-plus/components/icon'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport { messageEmits, messageProps } from './message'\nimport type { BadgeProps } from '@element-plus/components/badge'\n\nimport type { CSSProperties } from 'vue'\n\nexport default defineComponent({\n  name: 'ElMessage',\n\n  components: {\n    ElBadge,\n    ElIcon,\n    ...TypeComponents,\n  },\n\n  props: messageProps,\n  emits: messageEmits,\n\n  setup(props) {\n    const ns = useNamespace('message')\n    const visible = ref(false)\n    const badgeType = ref<BadgeProps['type']>(\n      props.type ? (props.type === 'error' ? 'danger' : props.type) : 'info'\n    )\n    let stopTimer: (() => void) | undefined = undefined\n\n    const typeClass = computed(() => {\n      const type = props.type\n      return { [ns.bm('icon', type)]: type && TypeComponentsMap[type] }\n    })\n\n    const iconComponent = computed(() => {\n      return props.icon || TypeComponentsMap[props.type] || ''\n    })\n\n    const customStyle = computed<CSSProperties>(() => ({\n      top: `${props.offset}px`,\n      zIndex: props.zIndex,\n    }))\n\n    function startTimer() {\n      if (props.duration > 0) {\n        ;({ stop: stopTimer } = useTimeoutFn(() => {\n          if (visible.value) close()\n        }, props.duration))\n      }\n    }\n\n    function clearTimer() {\n      stopTimer?.()\n    }\n\n    function close() {\n      visible.value = false\n    }\n\n    function keydown({ code }: KeyboardEvent) {\n      if (code === EVENT_CODE.esc) {\n        // press esc to close the message\n        if (visible.value) {\n          close()\n        }\n      } else {\n        startTimer() // resume timer\n      }\n    }\n\n    onMounted(() => {\n      startTimer()\n      visible.value = true\n    })\n\n    watch(\n      () => props.repeatNum,\n      () => {\n        clearTimer()\n        startTimer()\n      }\n    )\n\n    useEventListener(document, 'keydown', keydown)\n\n    return {\n      ns,\n      typeClass,\n      iconComponent,\n      customStyle,\n      visible,\n      badgeType,\n\n      close,\n      clearTimer,\n      startTimer,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}