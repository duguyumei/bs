{"ast":null,"code":"import request from \"@/utils/requst\";\nexport default {\n  name: \"orderManage\",\n  components: {},\n\n  data() {\n    return {\n      // isMax : false,//动态绑定表单中上传框\n      // search:'', //搜索关键词\n      returnData: [],\n      tableData: [],\n      //表格数据\n      total: 0,\n      //数据量\n      currentPage: 1,\n      //页码\n      pageSize: 10,\n      //页容量\n      // dialogVisible:false, //新增窗口\n      // form:{} //新增表单\n      options: []\n    };\n  },\n\n  created() {\n    //页面加载时的方法\n    this.getData();\n    this.rideList();\n  },\n\n  methods: {\n    //渲染tabledata\n    getData() {\n      var that = this;\n      request.get(\"/order\", {\n        params: {\n          pageNum: this.currentPage,\n          pageSize: this.pageSize,\n          id: eval(\"(\" + sessionStorage.getItem(\"data\") + \")\").id\n        }\n      }).then(res => {\n        console.log(res);\n        this.returnData = JSON.parse(JSON.stringify(res.data.records)); //深拷贝,独立对象\n\n        this.tableData = res.data.records;\n        this.total = res.data.total; //处理时间\n        // console.log(this.tableData[0]);\n\n        for (var i = 0; i < this.tableData.length; i++) {\n          // console.log(this.tableData[i].stime);\n          var newDate = new Date();\n          newDate.setTime(this.tableData[i].stime); // console.log(newDate.toLocaleString());\n\n          this.tableData[i].stime = newDate.toLocaleString();\n        } //处理菜品\n\n\n        for (var i = 0; i < this.tableData.length; i++) {\n          let dishlist = [];\n          let dishes = this.tableData[i].dish.split(\" \");\n          let num = 0;\n\n          for (var j = 0; j < dishes.length; j += 2) {\n            let index = i;\n            num = dishes[j + 1]; // console.log(dishes[j],\" \",dishes[j+1]);\n\n            request.get(\"/dishes/getDataById\", {\n              params: {\n                id: dishes[j]\n              }\n            }).then(res => {\n              var dishstr = res.data.name + \" ---*\" + num;\n              dishlist.push(dishstr); // console.log(index,dishlist);\n\n              that.tableData[index].dish = dishlist; // console.log(res.data.name)\n              // if(n == dishes.length){\n              // that.tableData[i].dish = dishlist;\n              // console.log(\"index\",i)\n              // console.log(this.tableData[0]);\n              // }\n            });\n          }\n        } //处理状态\n\n\n        for (var i = 0; i < this.tableData.length; i++) {\n          if (this.tableData[i].state == \"1\") {\n            this.tableData[i].state = \"等待接单\";\n          }\n\n          if (this.tableData[i].state == \"2\") {\n            this.tableData[i].state = \"已接单,等待配送\";\n          }\n\n          if (this.tableData[i].state == \"3\") {\n            this.tableData[i].state = \"正在配送\";\n          }\n\n          if (this.tableData[i].state == \"4\") {\n            this.tableData[i].state = \"完成\";\n          }\n        } //处理骑手\n\n\n        for (var i = 0; i < this.tableData.length; i++) {\n          if (this.tableData[i].ride != \"请选择\") {\n            request.get(\"/ride/getDataById\", {\n              params: {\n                sid: this.tableData[i].ride\n              }\n            }).then(res => {\n              console.log(1, that.tableData.ride);\n              that.tableData.ride = res.data.name;\n              console.log(2, that.tableData.ride);\n            });\n          }\n        }\n      });\n    },\n\n    //把每一行的索引放进row\n    rowClassName({\n      row,\n      rowIndex\n    }) {\n      row.index = rowIndex;\n    },\n\n    //分页操作\n    handleSizeChange(pageSize) {\n      this.pageSize = pageSize;\n      this.getData();\n    },\n\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getData();\n    },\n\n    //接单\n    acceptOrder(e) {\n      e.state = \"已接单,等待配送\";\n      let order = this.returnData[e.index];\n      order.state = \"2\"; // console.log(order);\n\n      request.put(\"/order/updateOrder\", order).then(res => {\n        console.log(res);\n\n        if (res.code === '0') {\n          this.$message({\n            type: \"success\",\n            message: \"更新成功\"\n          }); // this.getData();\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.message\n          });\n        }\n      });\n    },\n\n    //派送\n    postOrder(e) {\n      if (e.ride == \"请选择\") {\n        alert(\"请选择骑手\");\n      } else {\n        e.state = \"正在配送\";\n        let order = this.returnData[e.index];\n        order.state = \"3\";\n        order.ride = e.ride;\n        request.put(\"/order/updateOrder\", order).then(res => {\n          console.log(res);\n\n          if (res.code === '0') {\n            this.$message({\n              type: \"success\",\n              message: \"派送成功\"\n            }); // this.getData();\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.message\n            });\n          }\n        });\n      }\n    },\n\n    //获取骑手列表\n    rideList() {\n      var that = this;\n      request.get(\"/ride/getRideList\", {\n        params: {\n          id: eval(\"(\" + sessionStorage.getItem(\"data\") + \")\").id\n        }\n      }).then(res => {\n        var list = eval(res.msg);\n        console.log(list[0].name);\n        list.forEach(ride => {\n          that.options.push({\n            name: ride.name,\n            code: ride.id\n          });\n        });\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["request","name","components","data","returnData","tableData","total","currentPage","pageSize","options","created","getData","rideList","methods","that","get","params","pageNum","id","eval","sessionStorage","getItem","then","res","console","log","JSON","parse","stringify","records","i","length","newDate","Date","setTime","stime","toLocaleString","dishlist","dishes","dish","split","num","j","index","dishstr","push","state","ride","sid","rowClassName","row","rowIndex","handleSizeChange","handleCurrentChange","acceptOrder","e","order","put","code","$message","type","message","postOrder","alert","list","msg","forEach"],"sourceRoot":"","sources":["E:\\notejs\\manage\\vue\\src\\views\\orderManage.vue"],"sourcesContent":["<template>\r\n    <div class=\"dishManage_table\">\r\n        <el-table :data=\"tableData\" border :row-class-name=\"rowClassName\">\r\n            <el-table-column prop=\"id\" label=\"订单ID\" sortable width=\"100\"/>\r\n            <el-table-column prop=\"stime\" label=\"时间\" sortable width=\"200\"/>\r\n            <el-table-column prop=\"dish\" label=\"菜品\" sortable>\r\n                <template #default=\"scope\">\r\n                    <div>\r\n                        <ul>\r\n                            <li v-for=\"item in scope.row.dish\">\r\n                                {{item}}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"message\" label=\"备注\" sortable/>\r\n            <el-table-column prop=\"people\" label=\"收货人\" sortable />\r\n            <el-table-column prop=\"address\" label=\"收货地址\" sortable />\r\n<!--            <el-table-column prop=\"ride\" label=\"骑手\" sortable />-->\r\n            <el-table-column label=\"骑手\" prop=\"ride\">\r\n                <template #default=\"scope\">\r\n                    <el-select v-model=\"scope.row.ride\" prop=\"ride\" >\r\n                        <el-option\r\n                                v-for=\"item in options\"\r\n                                :key=\"item.code\"\r\n                                :label=\"item.name\"\r\n                                :value=\"item.code\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"state\" label=\"状态\" sortable />\r\n            <el-table-column fixed=\"right\" label=\"操作\" :width=\"100\" >\r\n                <template #default=\"scope\">\r\n                    <el-button v-if=\"scope.row.state == '等待接单'\" type=\"text\" size=\"small\" @click=\"acceptOrder(scope.row)\">接单</el-button>\r\n                    <el-button v-if=\"scope.row.state == '已接单,等待配送'\" type=\"text\" size=\"small\" @click=\"postOrder(scope.row)\">派送</el-button>\r\n                    <el-button v-if=\"scope.row.state == '正在配送'\" type=\"text\" size=\"small\" style=\"color: #cccccc\">正在派送</el-button>\r\n                    <el-button v-if=\"scope.row.state == '完成'\" type=\"text\" size=\"small\" style=\"color: #cccccc\">已完成</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <!--分页-->\r\n        <div style=\"margin-top: 10px\">\r\n            <el-pagination\r\n                    v-model:currentPage=\"currentPage\"\r\n                    :page-size=\"pageSize\"\r\n                    :page-sizes=\"[5, 10, 20]\"\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=total\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n            >\r\n            </el-pagination>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import request from \"@/utils/requst\";\r\n\r\n    export default {\r\n        name: \"orderManage\",\r\n        components: {\r\n\r\n        },\r\n        data(){\r\n            return{\r\n                // isMax : false,//动态绑定表单中上传框\r\n                // search:'', //搜索关键词\r\n                returnData:[],\r\n                tableData:[], //表格数据\r\n                total:0, //数据量\r\n                currentPage:1, //页码\r\n                pageSize:10, //页容量\r\n                // dialogVisible:false, //新增窗口\r\n                // form:{} //新增表单\r\n                options: []\r\n            }\r\n        },\r\n        created() {\r\n            //页面加载时的方法\r\n            this.getData();\r\n            this.rideList();\r\n        },\r\n        methods: {\r\n            //渲染tabledata\r\n            getData(){\r\n                var that = this;\r\n                request.get(\"/order\",{\r\n                    params:{\r\n                        pageNum:this.currentPage,\r\n                        pageSize:this.pageSize,\r\n                        id: eval(\"(\" + sessionStorage.getItem(\"data\") + \")\").id\r\n                    }\r\n                }).then(res=>{\r\n                    console.log(res)\r\n                    this.returnData = JSON.parse(JSON.stringify(res.data.records))//深拷贝,独立对象\r\n                    this.tableData = res.data.records;\r\n                    this.total = res.data.total;\r\n\r\n                    //处理时间\r\n                    // console.log(this.tableData[0]);\r\n                    for (var i = 0; i < this.tableData.length; i++){\r\n                        // console.log(this.tableData[i].stime);\r\n                        var newDate = new Date();\r\n                        newDate.setTime(this.tableData[i].stime);\r\n                        // console.log(newDate.toLocaleString());\r\n                        this.tableData[i].stime = newDate.toLocaleString();\r\n                    }\r\n\r\n                    //处理菜品\r\n                    for (var i = 0; i < this.tableData.length; i++){\r\n                        let dishlist=[];\r\n                        let dishes = this.tableData[i].dish.split(\" \");\r\n                        let num = 0;\r\n                        for(var j = 0; j < dishes.length; j+=2){\r\n                            let index = i;\r\n                            num = dishes[j+1];\r\n                            // console.log(dishes[j],\" \",dishes[j+1]);\r\n                            request.get(\"/dishes/getDataById\",{\r\n                                params:{\r\n                                    id: dishes[j]\r\n                                }\r\n                            }).then(res=>{\r\n                                var  dishstr = res.data.name + \" ---*\" +  num;\r\n                                dishlist.push(dishstr)\r\n                                // console.log(index,dishlist);\r\n                                that.tableData[index].dish = dishlist;\r\n                                // console.log(res.data.name)\r\n                                // if(n == dishes.length){\r\n                                    // that.tableData[i].dish = dishlist;\r\n                                    // console.log(\"index\",i)\r\n                                    // console.log(this.tableData[0]);\r\n                                // }\r\n                            })\r\n                        }\r\n                    }\r\n\r\n                    //处理状态\r\n                    for (var i = 0; i < this.tableData.length; i++){\r\n                        if(this.tableData[i].state == \"1\"){\r\n                            this.tableData[i].state = \"等待接单\";\r\n                        }\r\n                        if(this.tableData[i].state == \"2\"){\r\n                            this.tableData[i].state = \"已接单,等待配送\";\r\n                        }\r\n                        if(this.tableData[i].state == \"3\"){\r\n                            this.tableData[i].state = \"正在配送\";\r\n                        }\r\n                        if(this.tableData[i].state == \"4\"){\r\n                            this.tableData[i].state = \"完成\";\r\n                        }\r\n                    }\r\n\r\n                    //处理骑手\r\n                    for (var i = 0; i < this.tableData.length; i++){\r\n                        if(this.tableData[i].ride != \"请选择\"){\r\n                            request.get(\"/ride/getDataById\",{\r\n                                params:{\r\n                                    sid: this.tableData[i].ride\r\n                                }\r\n                            }).then(res=>{\r\n                                console.log(1,that.tableData.ride)\r\n                                that.tableData.ride = res.data.name;\r\n                                console.log(2,that.tableData.ride)\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            },\r\n            //把每一行的索引放进row\r\n            rowClassName({row, rowIndex}) {\r\n                row.index = rowIndex;\r\n            },\r\n            //分页操作\r\n            handleSizeChange(pageSize){\r\n                this.pageSize = pageSize;\r\n                this.getData();\r\n            },\r\n            handleCurrentChange(currentPage){\r\n                this.currentPage = currentPage;\r\n                this.getData();\r\n            },\r\n            //接单\r\n            acceptOrder(e){\r\n                e.state = \"已接单,等待配送\"\r\n                let order = this.returnData[e.index];\r\n                order.state=\"2\";\r\n                // console.log(order);\r\n                request.put(\"/order/updateOrder\",order).then(res=>{\r\n                    console.log(res)\r\n                    if(res.code === '0'){\r\n                        this.$message({\r\n                            type:\"success\",\r\n                            message:\"更新成功\"\r\n                        });\r\n                            // this.getData();\r\n                    }else {\r\n                        this.$message({\r\n                            type:\"error\",\r\n                            message:res.message\r\n                        })\r\n                    }\r\n                })\r\n            },\r\n            //派送\r\n            postOrder(e){\r\n                if(e.ride == \"请选择\"){\r\n                    alert(\"请选择骑手\");\r\n                }else {\r\n                    e.state = \"正在配送\";\r\n                    let order = this.returnData[e.index];\r\n                    order.state = \"3\";\r\n                    order.ride = e.ride;\r\n                    request.put(\"/order/updateOrder\",order).then(res=>{\r\n                        console.log(res)\r\n                        if(res.code === '0'){\r\n                            this.$message({\r\n                                type:\"success\",\r\n                                message:\"派送成功\"\r\n                            });\r\n                            // this.getData();\r\n                        }else {\r\n                            this.$message({\r\n                                type:\"error\",\r\n                                message:res.message\r\n                            })\r\n                        }\r\n                    })\r\n                }\r\n            },\r\n            //获取骑手列表\r\n            rideList(){\r\n                var that = this;\r\n                request.get(\"/ride/getRideList\",{\r\n                    params:{\r\n                        id: eval(\"(\" + sessionStorage.getItem(\"data\") + \")\").id\r\n                    }\r\n                }).then(\r\n                    res=>{\r\n                        var list = eval(res.msg);\r\n                        console.log(list[0].name);\r\n                        list.forEach(ride => {\r\n                            that.options.push({name:ride.name,code:ride.id});\r\n                        })\r\n                    }\r\n                )\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}