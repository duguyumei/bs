{"ast":null,"code":"import request from \"@/utils/requst\"; // 封装api get请求\n\nexport const fetch = (path, params) => {\n  return axios.get(path, {\n    params: params\n  }).then(res => {\n    console.log(res);\n\n    if (res.data.code === 403) {\n      router.push({\n        path: '/'\n      });\n      Message({\n        message: res.data.msg,\n        type: 'warning'\n      });\n    } else {\n      return res.data;\n    }\n  }).catch(err => {\n    console.log(err);\n    return Promise.reject(err);\n  });\n};\nexport default {\n  name: \"orderManage\",\n  components: {},\n\n  data() {\n    return {\n      // isMax : false,//动态绑定表单中上传框\n      // search:'', //搜索关键词\n      returnData: [],\n      tableData: [],\n      //表格数据\n      total: 0,\n      //数据量\n      currentPage: 1,\n      //页码\n      pageSize: 10,\n      //页容量\n      // dialogVisible:false, //新增窗口\n      // form:{} //新增表单\n      form: {\n        code: '',\n        name: ''\n      },\n      value: '',\n      options: []\n    };\n  },\n\n  created() {\n    //页面加载时的方法\n    this.getData();\n  },\n\n  methods: {\n    //渲染tabledata\n    getData() {\n      var that = this;\n      request.get(\"/order\", {\n        params: {\n          pageNum: this.currentPage,\n          pageSize: this.pageSize,\n          id: eval(\"(\" + sessionStorage.getItem(\"data\") + \")\").id\n        }\n      }).then(res => {\n        console.log(res);\n        this.returnData = JSON.parse(JSON.stringify(res.data.records)); //深拷贝,独立对象\n\n        this.tableData = res.data.records;\n        this.total = res.data.total; //处理时间\n        // console.log(this.tableData[0]);\n\n        for (var i = 0; i < this.tableData.length; i++) {\n          // console.log(this.tableData[i].stime);\n          var newDate = new Date();\n          newDate.setTime(this.tableData[i].stime); // console.log(newDate.toLocaleString());\n\n          this.tableData[i].stime = newDate.toLocaleString();\n        } //处理菜品\n\n\n        for (var i = 0; i < this.tableData.length; i++) {\n          let dishlist = [];\n          let dishes = this.tableData[i].dish.split(\" \");\n          let num = 0;\n\n          for (var j = 0; j < dishes.length; j += 2) {\n            let index = i;\n            num = dishes[j + 1]; // console.log(dishes[j],\" \",dishes[j+1]);\n\n            request.get(\"/dishes/getDataById\", {\n              params: {\n                id: dishes[j]\n              }\n            }).then(res => {\n              var dishstr = res.data.name + \" ---*\" + num;\n              dishlist.push(dishstr); // console.log(index,dishlist);\n\n              that.tableData[index].dish = dishlist; // console.log(res.data.name)\n              // if(n == dishes.length){\n              // that.tableData[i].dish = dishlist;\n              // console.log(\"index\",i)\n              // console.log(this.tableData[0]);\n              // }\n            });\n          }\n        } //处理状态\n\n\n        for (var i = 0; i < this.tableData.length; i++) {\n          if (this.tableData[i].state == \"等待骑手接单\") {\n            this.tableData[i].state = \"已接单\";\n          }\n        }\n      });\n    },\n\n    //把每一行的索引放进row\n    rowClassName({\n      row,\n      rowIndex\n    }) {\n      row.index = rowIndex;\n    },\n\n    //分页操作\n    handleSizeChange(pageSize) {\n      this.pageSize = pageSize;\n      this.getData();\n    },\n\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getData();\n    },\n\n    acceptOrder(e) {\n      if (e.state == \"已接单\") {\n        alert(\"您已接单\");\n      } else {\n        e.state = \"已接单\";\n        let order = this.returnData[e.index];\n        order.state = \"等待骑手接单\";\n        console.log(order);\n        request.put(\"/order/updateOrder\", order).then(res => {\n          console.log(res);\n\n          if (res.code === '0') {\n            this.$message({\n              type: \"success\",\n              message: \"更新成功\"\n            }); // this.getData();\n          } else {\n            this.$message({\n              type: \"error\",\n              message: res.message\n            });\n          }\n        });\n      }\n    },\n\n    async allmedia() {\n      let res = await fetch('/v3/media/allList');\n      res.result.forEach(element => {\n        this.options.push({\n          name: element.name,\n          code: element.code\n        });\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"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","names":["request","fetch","path","params","axios","get","then","res","console","log","data","code","router","push","Message","message","msg","type","catch","err","Promise","reject","name","components","returnData","tableData","total","currentPage","pageSize","form","value","options","created","getData","methods","that","pageNum","id","eval","sessionStorage","getItem","JSON","parse","stringify","records","i","length","newDate","Date","setTime","stime","toLocaleString","dishlist","dishes","dish","split","num","j","index","dishstr","state","rowClassName","row","rowIndex","handleSizeChange","handleCurrentChange","acceptOrder","e","alert","order","put","$message","allmedia","result","forEach","element"],"sourceRoot":"","sources":["E:\\notejs\\manage\\vue\\src\\views\\orderManage.vue"],"sourcesContent":["<template>\r\n    <div class=\"dishManage_table\">\r\n        <el-table :data=\"tableData\" border :row-class-name=\"rowClassName\">\r\n            <el-table-column prop=\"id\" label=\"订单ID\" sortable width=\"100\"/>\r\n            <el-table-column prop=\"stime\" label=\"时间\" sortable width=\"200\"/>\r\n            <el-table-column prop=\"dish\" label=\"菜品\" sortable>\r\n                <template #default=\"scope\">\r\n                    <div>\r\n                        <ul>\r\n                            <li v-for=\"item in scope.row.dish\">\r\n                                {{item}}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"message\" label=\"备注\" sortable/>\r\n            <el-table-column prop=\"people\" label=\"收货人\" sortable />\r\n            <el-table-column prop=\"address\" label=\"收货地址\" sortable />\r\n<!--            <el-table-column prop=\"ride\" label=\"骑手\" sortable />-->\r\n            <el-table-column label=\"骑手\" prop=\"ride\">\r\n                <template #default=\"scope\">\r\n                    <el-select v-model=\"value\" placeholder=\"请选择骑手\">\r\n                        <el-option\r\n                                v-for=\"item in options\"\r\n                                :key=\"item.code\"\r\n                                :label=\"item.name\"\r\n                                :value=\"item.code\">\r\n                        </el-option>\r\n                    </el-select>\r\n                </template>\r\n            </el-table-column>\r\n            <el-table-column prop=\"state\" label=\"状态\" sortable />\r\n            <el-table-column fixed=\"right\" label=\"操作\" :width=\"100\" >\r\n                <template #default=\"scope\">\r\n                    <el-button type=\"text\" size=\"small\" @click=\"acceptOrder(scope.row)\">接单</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <!--分页-->\r\n        <div style=\"margin-top: 10px\">\r\n            <el-pagination\r\n                    v-model:currentPage=\"currentPage\"\r\n                    :page-size=\"pageSize\"\r\n                    :page-sizes=\"[5, 10, 20]\"\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=total\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n            >\r\n            </el-pagination>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import request from \"@/utils/requst\";\r\n\r\n    // 封装api get请求\r\n    export const fetch = (path, params) => {\r\n        return axios.get(path, {params: params}).then(res => {\r\n            console.log(res)\r\n            if(res.data.code===403){\r\n                router.push({\r\n                    path:'/'\r\n                });\r\n                Message({\r\n                    message:res.data.msg,\r\n                    type:'warning'\r\n                })\r\n            }else{\r\n                return res.data;\r\n            }\r\n        }).catch(err => {\r\n            console.log(err);\r\n            return Promise.reject(err);\r\n        })\r\n    }\r\n\r\n    export default {\r\n        name: \"orderManage\",\r\n        components: {\r\n\r\n        },\r\n        data(){\r\n            return{\r\n                // isMax : false,//动态绑定表单中上传框\r\n                // search:'', //搜索关键词\r\n                returnData:[],\r\n                tableData:[], //表格数据\r\n                total:0, //数据量\r\n                currentPage:1, //页码\r\n                pageSize:10, //页容量\r\n                // dialogVisible:false, //新增窗口\r\n                // form:{} //新增表单\r\n                form:{\r\n                    code:'',\r\n                    name:''\r\n                },\r\n                value:'',\r\n                options: []\r\n            }\r\n        },\r\n        created() {\r\n            //页面加载时的方法\r\n            this.getData();\r\n        },\r\n        methods: {\r\n            //渲染tabledata\r\n            getData(){\r\n                var that = this;\r\n                request.get(\"/order\",{\r\n                    params:{\r\n                        pageNum:this.currentPage,\r\n                        pageSize:this.pageSize,\r\n                        id: eval(\"(\" + sessionStorage.getItem(\"data\") + \")\").id\r\n                    }\r\n                }).then(res=>{\r\n                    console.log(res)\r\n                    this.returnData = JSON.parse(JSON.stringify(res.data.records))//深拷贝,独立对象\r\n                    this.tableData = res.data.records;\r\n                    this.total = res.data.total;\r\n\r\n                    //处理时间\r\n                    // console.log(this.tableData[0]);\r\n                    for (var i = 0; i < this.tableData.length; i++){\r\n                        // console.log(this.tableData[i].stime);\r\n                        var newDate = new Date();\r\n                        newDate.setTime(this.tableData[i].stime);\r\n                        // console.log(newDate.toLocaleString());\r\n                        this.tableData[i].stime = newDate.toLocaleString();\r\n                    }\r\n\r\n                    //处理菜品\r\n                    for (var i = 0; i < this.tableData.length; i++){\r\n                        let dishlist=[];\r\n                        let dishes = this.tableData[i].dish.split(\" \");\r\n                        let num = 0;\r\n                        for(var j = 0; j < dishes.length; j+=2){\r\n                            let index = i;\r\n                            num = dishes[j+1];\r\n                            // console.log(dishes[j],\" \",dishes[j+1]);\r\n                            request.get(\"/dishes/getDataById\",{\r\n                                params:{\r\n                                    id: dishes[j]\r\n                                }\r\n                            }).then(res=>{\r\n                                var  dishstr = res.data.name + \" ---*\" +  num;\r\n                                dishlist.push(dishstr)\r\n                                // console.log(index,dishlist);\r\n                                that.tableData[index].dish = dishlist;\r\n                                // console.log(res.data.name)\r\n                                // if(n == dishes.length){\r\n                                    // that.tableData[i].dish = dishlist;\r\n                                    // console.log(\"index\",i)\r\n                                    // console.log(this.tableData[0]);\r\n                                // }\r\n                            })\r\n                        }\r\n                    }\r\n\r\n                    //处理状态\r\n                    for (var i = 0; i < this.tableData.length; i++){\r\n                        if(this.tableData[i].state == \"等待骑手接单\"){\r\n                            this.tableData[i].state = \"已接单\";\r\n                        }\r\n                    }\r\n                })\r\n            },\r\n            //把每一行的索引放进row\r\n            rowClassName({row, rowIndex}) {\r\n                row.index = rowIndex;\r\n            },\r\n            //分页操作\r\n            handleSizeChange(pageSize){\r\n                this.pageSize = pageSize;\r\n                this.getData();\r\n            },\r\n            handleCurrentChange(currentPage){\r\n                this.currentPage = currentPage;\r\n                this.getData();\r\n            },\r\n            acceptOrder(e){\r\n                if(e.state==\"已接单\"){\r\n                    alert(\"您已接单\");\r\n                }else{\r\n                    e.state = \"已接单\"\r\n                    let order = this.returnData[e.index];\r\n                    order.state=\"等待骑手接单\";\r\n                    console.log(order);\r\n                    request.put(\"/order/updateOrder\",order).then(res=>{\r\n                        console.log(res)\r\n                        if(res.code === '0'){\r\n                            this.$message({\r\n                                type:\"success\",\r\n                                message:\"更新成功\"\r\n                            });\r\n                            // this.getData();\r\n                        }else {\r\n                            this.$message({\r\n                                type:\"error\",\r\n                                message:res.message\r\n                            })\r\n                        }\r\n                    });\r\n                }\r\n            },\r\n            async allmedia() {\r\n                let res = await fetch('/v3/media/allList');\r\n                res.result.forEach(element => {\r\n                    this.options.push({name:element.name,code:element.code});\r\n                })\r\n            }\r\n        },\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}