{"ast":null,"code":"import { defineComponent, toRefs, computed, unref, provide, reactive, onMounted, nextTick, onBeforeUnmount, resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createVNode, withCtx, createElementVNode, normalizeStyle, toDisplayString, createBlock, createCommentVNode, Transition, Fragment, renderList, withKeys, vModelText, createSlots, resolveDynamicComponent, vShow, renderSlot } from 'vue';\nimport '../../../directives/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { ElInput } from '../../input/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElScrollbar } from '../../scrollbar/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../popper/index.mjs';\nimport '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { CircleClose, ArrowUp } from '@element-plus/icons-vue';\nimport Option from './option.mjs';\nimport ElSelectMenu from './select-dropdown.mjs';\nimport { useSelectStates, useSelect } from './useSelect.mjs';\nimport { selectKey } from './token.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { isValidComponentSize } from '../../../utils/vue/validator.mjs';\nimport { useTooltipContentProps } from '../../tooltip/src/tooltip.mjs';\nimport { tagProps } from '../../tag/src/tag.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../hooks/use-locale/index.mjs';\nimport { useFocus } from '../../../hooks/use-focus/index.mjs';\nimport { addResizeListener, removeResizeListener } from '../../../utils/dom/resize-event.mjs';\nimport { useDeprecateAppendToBody } from '../../popper/src/deprecation.mjs';\nconst COMPONENT_NAME = \"ElSelect\";\n\nconst _sfc_main = defineComponent({\n  name: COMPONENT_NAME,\n  componentName: COMPONENT_NAME,\n  components: {\n    ElInput,\n    ElSelectMenu,\n    ElOption: Option,\n    ElTag,\n    ElScrollbar,\n    ElTooltip,\n    ElIcon\n  },\n  directives: {\n    ClickOutside\n  },\n  props: {\n    name: String,\n    id: String,\n    modelValue: {\n      type: [Array, String, Number, Boolean, Object],\n      default: void 0\n    },\n    autocomplete: {\n      type: String,\n      default: \"off\"\n    },\n    automaticDropdown: Boolean,\n    size: {\n      type: String,\n      validator: isValidComponentSize\n    },\n    effect: {\n      type: String,\n      default: \"light\"\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    allowCreate: Boolean,\n    loading: Boolean,\n    popperClass: {\n      type: String,\n      default: \"\"\n    },\n    remote: Boolean,\n    loadingText: String,\n    noMatchText: String,\n    noDataText: String,\n    remoteMethod: Function,\n    filterMethod: Function,\n    multiple: Boolean,\n    multipleLimit: {\n      type: Number,\n      default: 0\n    },\n    placeholder: {\n      type: String\n    },\n    defaultFirstOption: Boolean,\n    reserveKeyword: {\n      type: Boolean,\n      default: true\n    },\n    valueKey: {\n      type: String,\n      default: \"value\"\n    },\n    collapseTags: Boolean,\n    popperAppendToBody: {\n      type: Boolean,\n      default: void 0\n    },\n    teleported: useTooltipContentProps.teleported,\n    persistent: {\n      type: Boolean,\n      default: true\n    },\n    clearIcon: {\n      type: [String, Object],\n      default: CircleClose\n    },\n    fitInputWidth: {\n      type: Boolean,\n      default: false\n    },\n    suffixIcon: {\n      type: [String, Object],\n      default: ArrowUp\n    },\n    tagType: { ...tagProps.type,\n      default: \"info\"\n    }\n  },\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"remove-tag\", \"clear\", \"visible-change\", \"focus\", \"blur\"],\n\n  setup(props, ctx) {\n    const nsSelect = useNamespace(\"select\");\n    const nsInput = useNamespace(\"input\");\n    const {\n      t\n    } = useLocale();\n    const states = useSelectStates(props);\n    const {\n      optionsArray,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      setSelected,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      onOptionCreate,\n      onOptionDestroy,\n      handleMenuEnter,\n      handleFocus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      dropMenuVisible,\n      reference,\n      input,\n      tooltipRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n      queryChange,\n      groupQueryChange\n    } = useSelect(props, states, ctx);\n    const {\n      focus\n    } = useFocus(reference);\n    const {\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      softFocus,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      isSilentBlur,\n      options,\n      cachedOptions,\n      optionsCount,\n      prefixWidth,\n      tagInMultiLine\n    } = toRefs(states);\n    const wrapperKls = computed(() => {\n      const classList = [nsSelect.b()];\n\n      const _selectSize = unref(selectSize);\n\n      if (_selectSize) {\n        classList.push(nsSelect.m(_selectSize));\n      }\n\n      if (props.disabled) {\n        classList.push(nsSelect.m(\"disabled\"));\n      }\n\n      return classList;\n    });\n    const selectTagsStyle = computed(() => ({\n      maxWidth: `${unref(inputWidth) - 32}px`,\n      width: \"100%\"\n    }));\n    provide(selectKey, reactive({\n      props,\n      options,\n      optionsArray,\n      cachedOptions,\n      optionsCount,\n      filteredOptionsCount,\n      hoverIndex,\n      handleOptionSelect,\n      onOptionCreate,\n      onOptionDestroy,\n      selectWrapper,\n      selected,\n      setSelected,\n      queryChange,\n      groupQueryChange\n    }));\n    onMounted(() => {\n      states.cachedPlaceHolder = currentPlaceholder.value = props.placeholder || t(\"el.select.placeholder\");\n\n      if (props.multiple && Array.isArray(props.modelValue) && props.modelValue.length > 0) {\n        currentPlaceholder.value = \"\";\n      }\n\n      addResizeListener(selectWrapper.value, handleResize);\n\n      if (reference.value && reference.value.$el) {\n        const sizeMap = {\n          large: 36,\n          default: 32,\n          small: 28\n        };\n        const input2 = reference.value.input;\n        states.initialInputHeight = input2.getBoundingClientRect().height || sizeMap[selectSize.value];\n      }\n\n      if (props.remote && props.multiple) {\n        resetInputHeight();\n      }\n\n      nextTick(() => {\n        if (!reference.value) return;\n\n        if (reference.value.$el) {\n          inputWidth.value = reference.value.$el.getBoundingClientRect().width;\n        }\n\n        if (ctx.slots.prefix) {\n          const inputChildNodes = reference.value.$el.childNodes;\n          const input2 = Array.from(inputChildNodes).filter(item => item.tagName === \"INPUT\")[0];\n          const prefix = reference.value.$el.querySelector(`.${nsInput.e(\"prefix\")}`);\n          prefixWidth.value = Math.max(prefix.getBoundingClientRect().width + 5, 30);\n\n          if (states.prefixWidth) {\n            input2.style.paddingLeft = `${Math.max(states.prefixWidth, 30)}px`;\n          }\n        }\n      });\n      setSelected();\n    });\n    onBeforeUnmount(() => {\n      removeResizeListener(selectWrapper.value, handleResize);\n    });\n\n    if (props.multiple && !Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, []);\n    }\n\n    if (!props.multiple && Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, \"\");\n    }\n\n    const popperPaneRef = computed(() => {\n      var _a, _b;\n\n      return (_b = (_a = tooltipRef.value) == null ? void 0 : _a.popperRef) == null ? void 0 : _b.contentRef;\n    });\n    const {\n      compatTeleported\n    } = useDeprecateAppendToBody(COMPONENT_NAME, \"popperAppendToBody\");\n    return {\n      tagInMultiLine,\n      prefixWidth,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      softFocus,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      isSilentBlur,\n      options,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      handleMenuEnter,\n      handleFocus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      dropMenuVisible,\n      focus,\n      reference,\n      input,\n      tooltipRef,\n      popperPaneRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n      wrapperKls,\n      selectTagsStyle,\n      compatTeleported,\n      nsSelect\n    };\n  }\n\n});\n\nconst _hoisted_1 = {\n  class: \"select-trigger\"\n};\nconst _hoisted_2 = [\"disabled\", \"autocomplete\"];\nconst _hoisted_3 = {\n  style: {\n    \"height\": \"100%\",\n    \"display\": \"flex\",\n    \"justify-content\": \"center\",\n    \"align-items\": \"center\"\n  }\n};\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = resolveComponent(\"el-tag\");\n\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  const _component_el_input = resolveComponent(\"el-input\");\n\n  const _component_el_option = resolveComponent(\"el-option\");\n\n  const _component_el_scrollbar = resolveComponent(\"el-scrollbar\");\n\n  const _component_el_select_menu = resolveComponent(\"el-select-menu\");\n\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  const _directive_click_outside = resolveDirective(\"click-outside\");\n\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"selectWrapper\",\n    class: normalizeClass(_ctx.wrapperKls),\n    onClick: _cache[24] || (_cache[24] = withModifiers((...args) => _ctx.toggleMenu && _ctx.toggleMenu(...args), [\"stop\"]))\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"tooltipRef\",\n    visible: _ctx.dropMenuVisible,\n    \"onUpdate:visible\": _cache[23] || (_cache[23] = $event => _ctx.dropMenuVisible = $event),\n    placement: \"bottom-start\",\n    teleported: _ctx.compatTeleported,\n    \"popper-class\": [_ctx.nsSelect.e(\"popper\"), _ctx.popperClass],\n    \"fallback-placements\": [\"bottom-start\", \"top-start\", \"right\", \"left\"],\n    effect: _ctx.effect,\n    pure: \"\",\n    trigger: \"click\",\n    transition: `${_ctx.nsSelect.namespace.value}-zoom-in-top`,\n    \"stop-popper-mouse-event\": false,\n    \"gpu-acceleration\": false,\n    persistent: _ctx.persistent,\n    onShow: _ctx.handleMenuEnter\n  }, {\n    default: withCtx(() => [createElementVNode(\"div\", _hoisted_1, [_ctx.multiple ? (openBlock(), createElementBlock(\"div\", {\n      key: 0,\n      ref: \"tags\",\n      class: normalizeClass(_ctx.nsSelect.e(\"tags\")),\n      style: normalizeStyle(_ctx.selectTagsStyle)\n    }, [_ctx.collapseTags && _ctx.selected.length ? (openBlock(), createElementBlock(\"span\", {\n      key: 0,\n      style: normalizeStyle({\n        marginLeft: _ctx.prefixWidth && _ctx.selected.length ? `${_ctx.prefixWidth}px` : \"\"\n      })\n    }, [createVNode(_component_el_tag, {\n      closable: !_ctx.selectDisabled && !_ctx.selected[0].isDisabled,\n      size: _ctx.collapseTagSize,\n      hit: _ctx.selected[0].hitState,\n      type: _ctx.tagType,\n      \"disable-transitions\": \"\",\n      onClose: _cache[0] || (_cache[0] = $event => _ctx.deleteTag($event, _ctx.selected[0]))\n    }, {\n      default: withCtx(() => [createElementVNode(\"span\", {\n        class: normalizeClass(_ctx.nsSelect.e(\"tags-text\")),\n        style: normalizeStyle({\n          maxWidth: _ctx.inputWidth - 123 + \"px\"\n        })\n      }, toDisplayString(_ctx.selected[0].currentLabel), 7)]),\n      _: 1\n    }, 8, [\"closable\", \"size\", \"hit\", \"type\"]), _ctx.selected.length > 1 ? (openBlock(), createBlock(_component_el_tag, {\n      key: 0,\n      closable: false,\n      size: _ctx.collapseTagSize,\n      type: _ctx.tagType,\n      \"disable-transitions\": \"\"\n    }, {\n      default: withCtx(() => [createElementVNode(\"span\", {\n        class: normalizeClass(_ctx.nsSelect.e(\"tags-text\"))\n      }, \"+ \" + toDisplayString(_ctx.selected.length - 1), 3)]),\n      _: 1\n    }, 8, [\"size\", \"type\"])) : createCommentVNode(\"v-if\", true)], 4)) : createCommentVNode(\"v-if\", true), createCommentVNode(\" <div> \"), !_ctx.collapseTags ? (openBlock(), createBlock(Transition, {\n      key: 1,\n      onAfterLeave: _ctx.resetInputHeight\n    }, {\n      default: withCtx(() => [createElementVNode(\"span\", {\n        style: normalizeStyle({\n          marginLeft: _ctx.prefixWidth && _ctx.selected.length ? `${_ctx.prefixWidth}px` : \"\"\n        })\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.selected, item => {\n        return openBlock(), createBlock(_component_el_tag, {\n          key: _ctx.getValueKey(item),\n          closable: !_ctx.selectDisabled && !item.isDisabled,\n          size: _ctx.collapseTagSize,\n          hit: item.hitState,\n          type: _ctx.tagType,\n          \"disable-transitions\": \"\",\n          onClose: $event => _ctx.deleteTag($event, item)\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelect.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: _ctx.inputWidth - 75 + \"px\"\n            })\n          }, toDisplayString(item.currentLabel), 7)]),\n          _: 2\n        }, 1032, [\"closable\", \"size\", \"hit\", \"type\", \"onClose\"]);\n      }), 128))], 4)]),\n      _: 1\n    }, 8, [\"onAfterLeave\"])) : createCommentVNode(\"v-if\", true), createCommentVNode(\" </div> \"), _ctx.filterable ? withDirectives((openBlock(), createElementBlock(\"input\", {\n      key: 2,\n      ref: \"input\",\n      \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => _ctx.query = $event),\n      type: \"text\",\n      class: normalizeClass([_ctx.nsSelect.e(\"input\"), _ctx.nsSelect.is(_ctx.selectSize)]),\n      disabled: _ctx.selectDisabled,\n      autocomplete: _ctx.autocomplete,\n      style: normalizeStyle({\n        marginLeft: _ctx.prefixWidth && !_ctx.selected.length || _ctx.tagInMultiLine ? `${_ctx.prefixWidth}px` : \"\",\n        flexGrow: 1,\n        width: `${_ctx.inputLength / (_ctx.inputWidth - 32)}%`,\n        maxWidth: `${_ctx.inputWidth - 42}px`\n      }),\n      onFocus: _cache[2] || (_cache[2] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n      onBlur: _cache[3] || (_cache[3] = (...args) => _ctx.handleBlur && _ctx.handleBlur(...args)),\n      onKeyup: _cache[4] || (_cache[4] = (...args) => _ctx.managePlaceholder && _ctx.managePlaceholder(...args)),\n      onKeydown: [_cache[5] || (_cache[5] = (...args) => _ctx.resetInputState && _ctx.resetInputState(...args)), _cache[6] || (_cache[6] = withKeys(withModifiers($event => _ctx.navigateOptions(\"next\"), [\"prevent\"]), [\"down\"])), _cache[7] || (_cache[7] = withKeys(withModifiers($event => _ctx.navigateOptions(\"prev\"), [\"prevent\"]), [\"up\"])), _cache[8] || (_cache[8] = withKeys(withModifiers($event => _ctx.visible = false, [\"stop\", \"prevent\"]), [\"esc\"])), _cache[9] || (_cache[9] = withKeys(withModifiers((...args) => _ctx.selectOption && _ctx.selectOption(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[10] || (_cache[10] = withKeys((...args) => _ctx.deletePrevTag && _ctx.deletePrevTag(...args), [\"delete\"])), _cache[11] || (_cache[11] = withKeys($event => _ctx.visible = false, [\"tab\"]))],\n      onCompositionstart: _cache[12] || (_cache[12] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),\n      onCompositionupdate: _cache[13] || (_cache[13] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),\n      onCompositionend: _cache[14] || (_cache[14] = (...args) => _ctx.handleComposition && _ctx.handleComposition(...args)),\n      onInput: _cache[15] || (_cache[15] = (...args) => _ctx.debouncedQueryChange && _ctx.debouncedQueryChange(...args))\n    }, null, 46, _hoisted_2)), [[vModelText, _ctx.query]]) : createCommentVNode(\"v-if\", true)], 6)) : createCommentVNode(\"v-if\", true), createVNode(_component_el_input, {\n      id: _ctx.id,\n      ref: \"reference\",\n      modelValue: _ctx.selectedLabel,\n      \"onUpdate:modelValue\": _cache[16] || (_cache[16] = $event => _ctx.selectedLabel = $event),\n      type: \"text\",\n      placeholder: _ctx.currentPlaceholder,\n      name: _ctx.name,\n      autocomplete: _ctx.autocomplete,\n      size: _ctx.selectSize,\n      disabled: _ctx.selectDisabled,\n      readonly: _ctx.readonly,\n      \"validate-event\": false,\n      class: normalizeClass([_ctx.nsSelect.is(\"focus\", _ctx.visible)]),\n      tabindex: _ctx.multiple && _ctx.filterable ? -1 : void 0,\n      onFocus: _ctx.handleFocus,\n      onBlur: _ctx.handleBlur,\n      onInput: _ctx.debouncedOnInputChange,\n      onPaste: _ctx.debouncedOnInputChange,\n      onCompositionstart: _ctx.handleComposition,\n      onCompositionupdate: _ctx.handleComposition,\n      onCompositionend: _ctx.handleComposition,\n      onKeydown: [_cache[17] || (_cache[17] = withKeys(withModifiers($event => _ctx.navigateOptions(\"next\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[18] || (_cache[18] = withKeys(withModifiers($event => _ctx.navigateOptions(\"prev\"), [\"stop\", \"prevent\"]), [\"up\"])), withKeys(withModifiers(_ctx.selectOption, [\"stop\", \"prevent\"]), [\"enter\"]), _cache[19] || (_cache[19] = withKeys(withModifiers($event => _ctx.visible = false, [\"stop\", \"prevent\"]), [\"esc\"])), _cache[20] || (_cache[20] = withKeys($event => _ctx.visible = false, [\"tab\"]))],\n      onMouseenter: _cache[21] || (_cache[21] = $event => _ctx.inputHovering = true),\n      onMouseleave: _cache[22] || (_cache[22] = $event => _ctx.inputHovering = false)\n    }, createSlots({\n      suffix: withCtx(() => [_ctx.iconComponent ? withDirectives((openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: normalizeClass([_ctx.nsSelect.e(\"caret\"), _ctx.nsSelect.e(\"icon\"), _ctx.iconReverse])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n        _: 1\n      }, 8, [\"class\"])), [[vShow, !_ctx.showClose]]) : createCommentVNode(\"v-if\", true), _ctx.showClose && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 1,\n        class: normalizeClass([_ctx.nsSelect.e(\"caret\"), _ctx.nsSelect.e(\"icon\")]),\n        onClick: _ctx.handleClearClick\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true)]),\n      _: 2\n    }, [_ctx.$slots.prefix ? {\n      name: \"prefix\",\n      fn: withCtx(() => [createElementVNode(\"div\", _hoisted_3, [renderSlot(_ctx.$slots, \"prefix\")])])\n    } : void 0]), 1032, [\"id\", \"modelValue\", \"placeholder\", \"name\", \"autocomplete\", \"size\", \"disabled\", \"readonly\", \"class\", \"tabindex\", \"onFocus\", \"onBlur\", \"onInput\", \"onPaste\", \"onCompositionstart\", \"onCompositionupdate\", \"onCompositionend\", \"onKeydown\"])])]),\n    content: withCtx(() => [createVNode(_component_el_select_menu, null, {\n      default: withCtx(() => [withDirectives(createVNode(_component_el_scrollbar, {\n        ref: \"scrollbar\",\n        tag: \"ul\",\n        \"wrap-class\": _ctx.nsSelect.be(\"dropdown\", \"wrap\"),\n        \"view-class\": _ctx.nsSelect.be(\"dropdown\", \"list\"),\n        class: normalizeClass([_ctx.nsSelect.is(\"empty\", !_ctx.allowCreate && _ctx.query && _ctx.filteredOptionsCount === 0)])\n      }, {\n        default: withCtx(() => [_ctx.showNewOption ? (openBlock(), createBlock(_component_el_option, {\n          key: 0,\n          value: _ctx.query,\n          created: true\n        }, null, 8, [\"value\"])) : createCommentVNode(\"v-if\", true), renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"wrap-class\", \"view-class\", \"class\"]), [[vShow, _ctx.options.size > 0 && !_ctx.loading]]), _ctx.emptyText && (!_ctx.allowCreate || _ctx.loading || _ctx.allowCreate && _ctx.options.size === 0) ? (openBlock(), createElementBlock(Fragment, {\n        key: 0\n      }, [_ctx.$slots.empty ? renderSlot(_ctx.$slots, \"empty\", {\n        key: 0\n      }) : (openBlock(), createElementBlock(\"p\", {\n        key: 1,\n        class: normalizeClass(_ctx.nsSelect.be(\"dropdown\", \"empty\"))\n      }, toDisplayString(_ctx.emptyText), 3))], 2112)) : createCommentVNode(\"v-if\", true)]),\n      _: 3\n    })]),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"effect\", \"transition\", \"persistent\", \"onShow\"])], 2)), [[_directive_click_outside, _ctx.handleClose, _ctx.popperPaneRef]]);\n}\n\nvar Select = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render]]);\n\nexport { Select as default };","map":{"version":3,"mappings":"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","names":["COMPONENT_NAME","_sfc_main","defineComponent","name","componentName","components","ElInput","ElSelectMenu","ElOption","ElTag","ElScrollbar","ElTooltip","ElIcon","directives","ClickOutside","props","String","id","modelValue","type","Array","Number","Boolean","Object","default","autocomplete","automaticDropdown","size","validator","isValidComponentSize","effect","disabled","clearable","filterable","allowCreate","loading","popperClass","remote","loadingText","noMatchText","noDataText","remoteMethod","Function","filterMethod","multiple","multipleLimit","placeholder","defaultFirstOption","reserveKeyword","valueKey","collapseTags","popperAppendToBody","teleported","useTooltipContentProps","persistent","clearIcon","CircleClose","fitInputWidth","suffixIcon","ArrowUp","tagType","tagProps","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","ctx","nsSelect","useNamespace","nsInput","t","useLocale","states","useSelectStates","optionsArray","selectSize","readonly","handleResize","collapseTagSize","debouncedOnInputChange","debouncedQueryChange","deletePrevTag","deleteTag","deleteSelected","handleOptionSelect","scrollToOption","setSelected","resetInputHeight","managePlaceholder","showClose","selectDisabled","iconComponent","iconReverse","showNewOption","emptyText","toggleLastOptionHitState","resetInputState","handleComposition","onOptionCreate","onOptionDestroy","handleMenuEnter","handleFocus","blur","handleBlur","handleClearClick","handleClose","toggleMenu","selectOption","getValueKey","navigateOptions","dropMenuVisible","reference","input","tooltipRef","tags","selectWrapper","scrollbar","queryChange","groupQueryChange","useSelect","focus","useFocus","inputWidth","selected","inputLength","filteredOptionsCount","visible","softFocus","selectedLabel","hoverIndex","query","inputHovering","currentPlaceholder","menuVisibleOnFocus","isOnComposition","isSilentBlur","options","cachedOptions","optionsCount","prefixWidth","tagInMultiLine","toRefs","wrapperKls","computed","classList","b","_selectSize","unref","push","m","selectTagsStyle","maxWidth","width","provide","selectKey","reactive","onMounted","cachedPlaceHolder","value","isArray","length","addResizeListener","$el","sizeMap","large","small","input2","initialInputHeight","getBoundingClientRect","height","nextTick","slots","prefix","inputChildNodes","childNodes","from","filter","item","tagName","querySelector","e","Math","max","style","paddingLeft","onBeforeUnmount","removeResizeListener","emit","popperPaneRef","compatTeleported","_withDirectives","ref","class","onClick","createVNode","placement","pure","trigger","transition","onShow","_ctx","key","_normalizeClass","marginLeft","_component_el_tag","closable","hit","onClose","toDisplayString","createCommentVNode","onAfterLeave","_openBlock","_createCommentVNode","onFocus","onBlur","onKeyup","onKeydown","_cache","onCompositionstart","onCompositionupdate","onCompositionend","args","onInput","tabindex","onPaste","withKeys","onMouseenter","onMouseleave","suffix","openBlock","fn","createElementVNode","renderSlot","content","withDirectives","tag","be","created"],"sources":["../../../../../../packages/components/select/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectWrapper\"\n    v-click-outside:[popperPaneRef]=\"handleClose\"\n    :class=\"wrapperKls\"\n    @click.stop=\"toggleMenu\"\n  >\n    <el-tooltip\n      ref=\"tooltipRef\"\n      v-model:visible=\"dropMenuVisible\"\n      placement=\"bottom-start\"\n      :teleported=\"compatTeleported\"\n      :popper-class=\"[nsSelect.e('popper'), popperClass]\"\n      :fallback-placements=\"['bottom-start', 'top-start', 'right', 'left']\"\n      :effect=\"effect\"\n      pure\n      trigger=\"click\"\n      :transition=\"`${nsSelect.namespace.value}-zoom-in-top`\"\n      :stop-popper-mouse-event=\"false\"\n      :gpu-acceleration=\"false\"\n      :persistent=\"persistent\"\n      @show=\"handleMenuEnter\"\n    >\n      <template #default>\n        <div class=\"select-trigger\">\n          <div\n            v-if=\"multiple\"\n            ref=\"tags\"\n            :class=\"nsSelect.e('tags')\"\n            :style=\"selectTagsStyle\"\n          >\n            <span\n              v-if=\"collapseTags && selected.length\"\n              :style=\"{\n                marginLeft:\n                  prefixWidth && selected.length ? `${prefixWidth}px` : '',\n              }\"\n            >\n              <el-tag\n                :closable=\"!selectDisabled && !selected[0].isDisabled\"\n                :size=\"collapseTagSize\"\n                :hit=\"selected[0].hitState\"\n                :type=\"tagType\"\n                disable-transitions\n                @close=\"deleteTag($event, selected[0])\"\n              >\n                <span\n                  :class=\"nsSelect.e('tags-text')\"\n                  :style=\"{ maxWidth: inputWidth - 123 + 'px' }\"\n                  >{{ selected[0].currentLabel }}</span\n                >\n              </el-tag>\n              <el-tag\n                v-if=\"selected.length > 1\"\n                :closable=\"false\"\n                :size=\"collapseTagSize\"\n                :type=\"tagType\"\n                disable-transitions\n              >\n                <span :class=\"nsSelect.e('tags-text')\"\n                  >+ {{ selected.length - 1 }}</span\n                >\n              </el-tag>\n            </span>\n            <!-- <div> -->\n            <transition v-if=\"!collapseTags\" @after-leave=\"resetInputHeight\">\n              <span\n                :style=\"{\n                  marginLeft:\n                    prefixWidth && selected.length ? `${prefixWidth}px` : '',\n                }\"\n              >\n                <el-tag\n                  v-for=\"item in selected\"\n                  :key=\"getValueKey(item)\"\n                  :closable=\"!selectDisabled && !item.isDisabled\"\n                  :size=\"collapseTagSize\"\n                  :hit=\"item.hitState\"\n                  :type=\"tagType\"\n                  disable-transitions\n                  @close=\"deleteTag($event, item)\"\n                >\n                  <span\n                    :class=\"nsSelect.e('tags-text')\"\n                    :style=\"{ maxWidth: inputWidth - 75 + 'px' }\"\n                    >{{ item.currentLabel }}</span\n                  >\n                </el-tag>\n              </span>\n            </transition>\n            <!-- </div> -->\n            <input\n              v-if=\"filterable\"\n              ref=\"input\"\n              v-model=\"query\"\n              type=\"text\"\n              :class=\"[nsSelect.e('input'), nsSelect.is(selectSize)]\"\n              :disabled=\"selectDisabled\"\n              :autocomplete=\"autocomplete\"\n              :style=\"{\n                marginLeft:\n                  (prefixWidth && !selected.length) || tagInMultiLine\n                    ? `${prefixWidth}px`\n                    : '',\n                flexGrow: 1,\n                width: `${inputLength / (inputWidth - 32)}%`,\n                maxWidth: `${inputWidth - 42}px`,\n              }\"\n              @focus=\"handleFocus\"\n              @blur=\"handleBlur\"\n              @keyup=\"managePlaceholder\"\n              @keydown=\"resetInputState\"\n              @keydown.down.prevent=\"navigateOptions('next')\"\n              @keydown.up.prevent=\"navigateOptions('prev')\"\n              @keydown.esc.stop.prevent=\"visible = false\"\n              @keydown.enter.stop.prevent=\"selectOption\"\n              @keydown.delete=\"deletePrevTag\"\n              @keydown.tab=\"visible = false\"\n              @compositionstart=\"handleComposition\"\n              @compositionupdate=\"handleComposition\"\n              @compositionend=\"handleComposition\"\n              @input=\"debouncedQueryChange\"\n            />\n          </div>\n          <el-input\n            :id=\"id\"\n            ref=\"reference\"\n            v-model=\"selectedLabel\"\n            type=\"text\"\n            :placeholder=\"currentPlaceholder\"\n            :name=\"name\"\n            :autocomplete=\"autocomplete\"\n            :size=\"selectSize\"\n            :disabled=\"selectDisabled\"\n            :readonly=\"readonly\"\n            :validate-event=\"false\"\n            :class=\"[nsSelect.is('focus', visible)]\"\n            :tabindex=\"multiple && filterable ? -1 : undefined\"\n            @focus=\"handleFocus\"\n            @blur=\"handleBlur\"\n            @input=\"debouncedOnInputChange\"\n            @paste=\"debouncedOnInputChange\"\n            @compositionstart=\"handleComposition\"\n            @compositionupdate=\"handleComposition\"\n            @compositionend=\"handleComposition\"\n            @keydown.down.stop.prevent=\"navigateOptions('next')\"\n            @keydown.up.stop.prevent=\"navigateOptions('prev')\"\n            @keydown.enter.stop.prevent=\"selectOption\"\n            @keydown.esc.stop.prevent=\"visible = false\"\n            @keydown.tab=\"visible = false\"\n            @mouseenter=\"inputHovering = true\"\n            @mouseleave=\"inputHovering = false\"\n          >\n            <template v-if=\"$slots.prefix\" #prefix>\n              <div\n                style=\"\n                  height: 100%;\n                  display: flex;\n                  justify-content: center;\n                  align-items: center;\n                \"\n              >\n                <slot name=\"prefix\"></slot>\n              </div>\n            </template>\n            <template #suffix>\n              <el-icon\n                v-if=\"iconComponent\"\n                v-show=\"!showClose\"\n                :class=\"[nsSelect.e('caret'), nsSelect.e('icon'), iconReverse]\"\n              >\n                <component :is=\"iconComponent\" />\n              </el-icon>\n              <el-icon\n                v-if=\"showClose && clearIcon\"\n                :class=\"[nsSelect.e('caret'), nsSelect.e('icon')]\"\n                @click=\"handleClearClick\"\n              >\n                <component :is=\"clearIcon\" />\n              </el-icon>\n            </template>\n          </el-input>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu>\n          <el-scrollbar\n            v-show=\"options.size > 0 && !loading\"\n            ref=\"scrollbar\"\n            tag=\"ul\"\n            :wrap-class=\"nsSelect.be('dropdown', 'wrap')\"\n            :view-class=\"nsSelect.be('dropdown', 'list')\"\n            :class=\"[\n              nsSelect.is(\n                'empty',\n                !allowCreate && query && filteredOptionsCount === 0\n              ),\n            ]\"\n          >\n            <el-option v-if=\"showNewOption\" :value=\"query\" :created=\"true\" />\n            <slot></slot>\n          </el-scrollbar>\n          <template\n            v-if=\"\n              emptyText &&\n              (!allowCreate || loading || (allowCreate && options.size === 0))\n            \"\n          >\n            <slot v-if=\"$slots.empty\" name=\"empty\"></slot>\n            <p v-else :class=\"nsSelect.be('dropdown', 'empty')\">\n              {{ emptyText }}\n            </p>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport {\n  toRefs,\n  defineComponent,\n  onMounted,\n  onBeforeUnmount,\n  nextTick,\n  reactive,\n  provide,\n  computed,\n  unref,\n} from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport { useFocus, useLocale, useNamespace } from '@element-plus/hooks'\nimport ElInput from '@element-plus/components/input'\nimport ElTooltip, {\n  useTooltipContentProps,\n} from '@element-plus/components/tooltip'\nimport ElScrollbar from '@element-plus/components/scrollbar'\nimport ElTag, { tagProps } from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { useDeprecateAppendToBody } from '@element-plus/components/popper'\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '@element-plus/constants'\nimport {\n  addResizeListener,\n  removeResizeListener,\n  isValidComponentSize,\n} from '@element-plus/utils'\nimport { CircleClose, ArrowUp } from '@element-plus/icons-vue'\nimport ElOption from './option.vue'\nimport ElSelectMenu from './select-dropdown.vue'\nimport { useSelect, useSelectStates } from './useSelect'\nimport { selectKey } from './token'\n\nimport type { PropType, Component } from 'vue'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { SelectContext } from './token'\n\nconst COMPONENT_NAME = 'ElSelect'\nexport default defineComponent({\n  name: COMPONENT_NAME,\n  componentName: COMPONENT_NAME,\n  components: {\n    ElInput,\n    ElSelectMenu,\n    ElOption,\n    ElTag,\n    ElScrollbar,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside },\n  props: {\n    name: String,\n    id: String,\n    modelValue: {\n      type: [Array, String, Number, Boolean, Object],\n      default: undefined,\n    },\n    autocomplete: {\n      type: String,\n      default: 'off',\n    },\n    automaticDropdown: Boolean,\n    size: {\n      type: String as PropType<ComponentSize>,\n      validator: isValidComponentSize,\n    },\n    effect: {\n      type: String as PropType<'light' | 'dark' | string>,\n      default: 'light',\n    },\n    disabled: Boolean,\n    clearable: Boolean,\n    filterable: Boolean,\n    allowCreate: Boolean,\n    loading: Boolean,\n    popperClass: {\n      type: String,\n      default: '',\n    },\n    remote: Boolean,\n    loadingText: String,\n    noMatchText: String,\n    noDataText: String,\n    remoteMethod: Function,\n    filterMethod: Function,\n    multiple: Boolean,\n    multipleLimit: {\n      type: Number,\n      default: 0,\n    },\n    placeholder: {\n      type: String,\n    },\n    defaultFirstOption: Boolean,\n    reserveKeyword: {\n      type: Boolean,\n      default: true,\n    },\n    valueKey: {\n      type: String,\n      default: 'value',\n    },\n    collapseTags: Boolean,\n    popperAppendToBody: {\n      type: Boolean,\n      default: undefined,\n    },\n    teleported: useTooltipContentProps.teleported,\n    persistent: {\n      type: Boolean,\n      default: true,\n    },\n    clearIcon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: CircleClose,\n    },\n    fitInputWidth: {\n      type: Boolean,\n      default: false,\n    },\n    suffixIcon: {\n      type: [String, Object] as PropType<string | Component>,\n      default: ArrowUp,\n    },\n    // eslint-disable-next-line vue/require-prop-types\n    tagType: { ...tagProps.type, default: 'info' },\n  },\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n  ],\n\n  setup(props, ctx) {\n    const nsSelect = useNamespace('select')\n    const nsInput = useNamespace('input')\n    const { t } = useLocale()\n    const states = useSelectStates(props)\n    const {\n      optionsArray,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      setSelected,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      onOptionCreate,\n      onOptionDestroy,\n      handleMenuEnter,\n      handleFocus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      dropMenuVisible,\n\n      reference,\n      input,\n      tooltipRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n      queryChange,\n      groupQueryChange,\n    } = useSelect(props, states, ctx)\n\n    const { focus } = useFocus(reference)\n\n    const {\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      softFocus,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      isSilentBlur,\n      options,\n      cachedOptions,\n      optionsCount,\n      prefixWidth,\n      tagInMultiLine,\n    } = toRefs(states)\n\n    const wrapperKls = computed(() => {\n      const classList = [nsSelect.b()]\n      const _selectSize = unref(selectSize)\n      if (_selectSize) {\n        classList.push(nsSelect.m(_selectSize))\n      }\n      if (props.disabled) {\n        classList.push(nsSelect.m('disabled'))\n      }\n      return classList\n    })\n\n    const selectTagsStyle = computed(() => ({\n      maxWidth: `${unref(inputWidth) - 32}px`,\n      width: '100%',\n    }))\n\n    provide(\n      selectKey,\n      reactive({\n        props,\n        options,\n        optionsArray,\n        cachedOptions,\n        optionsCount,\n        filteredOptionsCount,\n        hoverIndex,\n        handleOptionSelect,\n        onOptionCreate,\n        onOptionDestroy,\n        selectWrapper,\n        selected,\n        setSelected,\n        queryChange,\n        groupQueryChange,\n      }) as unknown as SelectContext\n    )\n\n    onMounted(() => {\n      states.cachedPlaceHolder = currentPlaceholder.value =\n        props.placeholder || t('el.select.placeholder')\n      if (\n        props.multiple &&\n        Array.isArray(props.modelValue) &&\n        props.modelValue.length > 0\n      ) {\n        currentPlaceholder.value = ''\n      }\n      addResizeListener(selectWrapper.value as any, handleResize)\n      if (reference.value && reference.value.$el) {\n        const sizeMap = {\n          large: 36,\n          default: 32,\n          small: 28,\n        }\n        const input = reference.value.input as HTMLInputElement\n        states.initialInputHeight =\n          input.getBoundingClientRect().height || sizeMap[selectSize.value]\n      }\n      if (props.remote && props.multiple) {\n        resetInputHeight()\n      }\n      nextTick(() => {\n        if (!reference.value) return\n        if (reference.value.$el) {\n          inputWidth.value = reference.value.$el.getBoundingClientRect().width\n        }\n        if (ctx.slots.prefix) {\n          const inputChildNodes = reference.value.$el.childNodes\n          const input = (Array.from(inputChildNodes) as HTMLElement[]).filter(\n            (item) => item.tagName === 'INPUT'\n          )[0]\n          const prefix = reference.value.$el.querySelector(\n            `.${nsInput.e('prefix')}`\n          )\n          prefixWidth.value = Math.max(\n            prefix.getBoundingClientRect().width + 5,\n            30\n          )\n          if (states.prefixWidth) {\n            input.style.paddingLeft = `${Math.max(states.prefixWidth, 30)}px`\n          }\n        }\n      })\n      setSelected()\n    })\n\n    onBeforeUnmount(() => {\n      removeResizeListener(selectWrapper.value as any, handleResize)\n    })\n\n    if (props.multiple && !Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, [])\n    }\n    if (!props.multiple && Array.isArray(props.modelValue)) {\n      ctx.emit(UPDATE_MODEL_EVENT, '')\n    }\n\n    const popperPaneRef = computed(() => {\n      return tooltipRef.value?.popperRef?.contentRef\n    })\n\n    const { compatTeleported } = useDeprecateAppendToBody(\n      COMPONENT_NAME,\n      'popperAppendToBody'\n    )\n\n    return {\n      tagInMultiLine,\n      prefixWidth,\n      selectSize,\n      readonly,\n      handleResize,\n      collapseTagSize,\n      debouncedOnInputChange,\n      debouncedQueryChange,\n      deletePrevTag,\n      deleteTag,\n      deleteSelected,\n      handleOptionSelect,\n      scrollToOption,\n      inputWidth,\n      selected,\n      inputLength,\n      filteredOptionsCount,\n      visible,\n      softFocus,\n      selectedLabel,\n      hoverIndex,\n      query,\n      inputHovering,\n      currentPlaceholder,\n      menuVisibleOnFocus,\n      isOnComposition,\n      isSilentBlur,\n      options,\n      resetInputHeight,\n      managePlaceholder,\n      showClose,\n      selectDisabled,\n      iconComponent,\n      iconReverse,\n      showNewOption,\n      emptyText,\n      toggleLastOptionHitState,\n      resetInputState,\n      handleComposition,\n      handleMenuEnter,\n      handleFocus,\n      blur,\n      handleBlur,\n      handleClearClick,\n      handleClose,\n      toggleMenu,\n      selectOption,\n      getValueKey,\n      navigateOptions,\n      dropMenuVisible,\n      focus,\n\n      reference,\n      input,\n      tooltipRef,\n      popperPaneRef,\n      tags,\n      selectWrapper,\n      scrollbar,\n\n      wrapperKls,\n      selectTagsStyle,\n      compatTeleported,\n      nsSelect,\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}