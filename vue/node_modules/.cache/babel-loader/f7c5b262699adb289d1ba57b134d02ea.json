{"ast":null,"code":"import request from \"@/utils/requst\";\nexport default {\n  name: \"orderManage\",\n  components: {},\n\n  data() {\n    return {\n      // isMax : false,//动态绑定表单中上传框\n      // search:'', //搜索关键词\n      tableData: [],\n      //表格数据\n      total: 0,\n      //数据量\n      currentPage: 1,\n      //页码\n      pageSize: 10 //页容量\n      // dialogVisible:false, //新增窗口\n      // form:{} //新增表单\n\n    };\n  },\n\n  created() {\n    //页面加载时的方法\n    this.getData();\n  },\n\n  methods: {\n    //渲染tabledata\n    getData() {\n      request.get(\"/order\", {\n        params: {\n          pageNum: this.currentPage,\n          pageSize: this.pageSize,\n          id: eval(\"(\" + sessionStorage.getItem(\"data\") + \")\").id\n        }\n      }).then(res => {\n        console.log(res);\n        this.tableData = res.data.records;\n        this.total = res.data.total; //处理时间\n        // console.log(this.tableData[0]);\n\n        for (var i = 0; i < this.tableData.length; i++) {\n          // console.log(this.tableData[i].stime);\n          var newDate = new Date();\n          newDate.setTime(this.tableData[i].stime); // console.log(newDate.toLocaleString());\n\n          this.tableData[i].stime = newDate.toLocaleString();\n        } //处理菜品\n\n\n        for (var i = 0; i < this.tableData.length; i++) {\n          var dishlit = \"\";\n          var dishes = this.tableData[i].dish.split(\" \");\n\n          for (var j = 0; j < dishes.length; j += 2) {\n            console.log(dishes[j], \" \", dishes[j + 1]);\n            request.get(\"/dishes/getDataById\", {\n              params: {\n                id: dishes[j]\n              }\n            }).then(res => {\n              console.log(res.data);\n            });\n          }\n        }\n      });\n    },\n\n    //分页操作\n    handleSizeChange(pageSize) {\n      this.pageSize = pageSize;\n      this.getData();\n    },\n\n    handleCurrentChange(currentPage) {\n      this.currentPage = currentPage;\n      this.getData();\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAiCI,OAAOA,OAAP,MAAoB,gBAApB;AAEA,eAAe;AACXC,MAAI,EAAE,aADK;AAEXC,YAAU,EAAE,EAFD;;AAKXC,MAAI,GAAE;AACF,WAAM;AACF;AACA;AACAC,eAAS,EAAC,EAHR;AAGY;AACdC,WAAK,EAAC,CAJJ;AAIO;AACTC,iBAAW,EAAC,CALV;AAKa;AACfC,cAAQ,EAAC,EANP,CAMW;AACb;AACA;;AARE,KAAN;AAUH,GAhBU;;AAiBXC,SAAO,GAAG;AACN;AACA,SAAKC,OAAL;AACH,GApBU;;AAqBXC,SAAO,EAAE;AACL;AACAD,WAAO,GAAE;AACLT,aAAO,CAACW,GAAR,CAAY,QAAZ,EAAqB;AACjBC,cAAM,EAAC;AACHC,iBAAO,EAAC,KAAKP,WADV;AAEHC,kBAAQ,EAAC,KAAKA,QAFX;AAGHO,YAAE,EAAEC,IAAI,CAAC,MAAMC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAN,GAAuC,GAAxC,CAAJ,CAAiDH;AAHlD;AADU,OAArB,EAMGI,IANH,CAMQC,GAAG,IAAE;AACTC,eAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAKf,SAAL,GAAiBe,GAAG,CAAChB,IAAJ,CAASmB,OAA1B;AACA,aAAKjB,KAAL,GAAac,GAAG,CAAChB,IAAJ,CAASE,KAAtB,CAHS,CAKT;AACA;;AACA,aAAK,IAAIkB,IAAI,CAAb,EAAgBA,IAAI,KAAKnB,SAAL,CAAeoB,MAAnC,EAA2CD,CAAC,EAA5C,EAA+C;AAC3C;AACA,cAAIE,OAAM,GAAI,IAAIC,IAAJ,EAAd;AACAD,iBAAO,CAACE,OAAR,CAAgB,KAAKvB,SAAL,CAAemB,CAAf,EAAkBK,KAAlC,EAH2C,CAI3C;;AACA,eAAKxB,SAAL,CAAemB,CAAf,EAAkBK,KAAlB,GAA0BH,OAAO,CAACI,cAAR,EAA1B;AACJ,SAbS,CAeT;;;AACA,aAAK,IAAIN,IAAI,CAAb,EAAgBA,IAAI,KAAKnB,SAAL,CAAeoB,MAAnC,EAA2CD,CAAC,EAA5C,EAA+C;AAC3C,cAAIO,OAAO,GAAC,EAAZ;AACA,cAAIC,MAAK,GAAI,KAAK3B,SAAL,CAAemB,CAAf,EAAkBS,IAAlB,CAAuBC,KAAvB,CAA6B,GAA7B,CAAb;;AACA,eAAI,IAAIC,IAAI,CAAZ,EAAeA,IAAIH,MAAM,CAACP,MAA1B,EAAkCU,CAAC,IAAE,CAArC,EAAuC;AACnCd,mBAAO,CAACC,GAAR,CAAYU,MAAM,CAACG,CAAD,CAAlB,EAAsB,GAAtB,EAA0BH,MAAM,CAACG,CAAC,GAAC,CAAH,CAAhC;AACAlC,mBAAO,CAACW,GAAR,CAAY,qBAAZ,EAAkC;AAC9BC,oBAAM,EAAC;AACHE,kBAAE,EAAEiB,MAAM,CAACG,CAAD;AADP;AADuB,aAAlC,EAIGhB,IAJH,CAIQC,GAAG,IAAE;AACTC,qBAAO,CAACC,GAAR,CAAYF,GAAG,CAAChB,IAAhB;AACH,aAND;AAOJ;AACJ;AACH,OApCD;AAqCH,KAxCI;;AAyCL;AACAgC,oBAAgB,CAAC5B,QAAD,EAAU;AACtB,WAAKA,QAAL,GAAgBA,QAAhB;AACA,WAAKE,OAAL;AACH,KA7CI;;AA8CL2B,uBAAmB,CAAC9B,WAAD,EAAa;AAC5B,WAAKA,WAAL,GAAmBA,WAAnB;AACA,WAAKG,OAAL;AACH;;AAjDI;AArBE,CAAf","names":["request","name","components","data","tableData","total","currentPage","pageSize","created","getData","methods","get","params","pageNum","id","eval","sessionStorage","getItem","then","res","console","log","records","i","length","newDate","Date","setTime","stime","toLocaleString","dishlit","dishes","dish","split","j","handleSizeChange","handleCurrentChange"],"sourceRoot":"","sources":["E:\\notejs\\manage\\vue\\src\\views\\orderManage.vue"],"sourcesContent":["<template>\r\n    <div class=\"dishManage_table\">\r\n        <el-table :data=\"tableData\" border>\r\n            <el-table-column prop=\"stime\" label=\"时间\" sortable/>\r\n            <el-table-column prop=\"dish\" label=\"菜品\" sortable />\r\n            <el-table-column prop=\"message\" label=\"备注\" sortable />\r\n            <el-table-column prop=\"people\" label=\"收货人\" sortable />\r\n            <el-table-column prop=\"address\" label=\"收货地址\" sortable />\r\n            <el-table-column prop=\"ride\" label=\"骑手\" sortable />\r\n            <el-table-column prop=\"state\" label=\"状态\" sortable />\r\n            <el-table-column fixed=\"right\" label=\"操作\" :width=\"100\" >\r\n                <template #default=\"scope\">\r\n                    <el-button type=\"text\" size=\"small\" @click=\"handleEdit(scope.row)\">接单</el-button>\r\n                </template>\r\n            </el-table-column>\r\n        </el-table>\r\n        <!--分页-->\r\n        <div style=\"margin-top: 10px\">\r\n            <el-pagination\r\n                    v-model:currentPage=\"currentPage\"\r\n                    :page-size=\"pageSize\"\r\n                    :page-sizes=\"[5, 10, 20]\"\r\n                    layout=\"total, sizes, prev, pager, next, jumper\"\r\n                    :total=total\r\n                    @size-change=\"handleSizeChange\"\r\n                    @current-change=\"handleCurrentChange\"\r\n            >\r\n            </el-pagination>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n    import request from \"@/utils/requst\";\r\n\r\n    export default {\r\n        name: \"orderManage\",\r\n        components: {\r\n\r\n        },\r\n        data(){\r\n            return{\r\n                // isMax : false,//动态绑定表单中上传框\r\n                // search:'', //搜索关键词\r\n                tableData:[], //表格数据\r\n                total:0, //数据量\r\n                currentPage:1, //页码\r\n                pageSize:10, //页容量\r\n                // dialogVisible:false, //新增窗口\r\n                // form:{} //新增表单\r\n            }\r\n        },\r\n        created() {\r\n            //页面加载时的方法\r\n            this.getData();\r\n        },\r\n        methods: {\r\n            //渲染tabledata\r\n            getData(){\r\n                request.get(\"/order\",{\r\n                    params:{\r\n                        pageNum:this.currentPage,\r\n                        pageSize:this.pageSize,\r\n                        id: eval(\"(\" + sessionStorage.getItem(\"data\") + \")\").id\r\n                    }\r\n                }).then(res=>{\r\n                    console.log(res)\r\n                    this.tableData = res.data.records;\r\n                    this.total = res.data.total;\r\n\r\n                    //处理时间\r\n                    // console.log(this.tableData[0]);\r\n                    for (var i = 0; i < this.tableData.length; i++){\r\n                        // console.log(this.tableData[i].stime);\r\n                        var newDate = new Date();\r\n                        newDate.setTime(this.tableData[i].stime);\r\n                        // console.log(newDate.toLocaleString());\r\n                        this.tableData[i].stime = newDate.toLocaleString();\r\n                    }\r\n\r\n                    //处理菜品\r\n                    for (var i = 0; i < this.tableData.length; i++){\r\n                        var dishlit=\"\";\r\n                        var dishes = this.tableData[i].dish.split(\" \");\r\n                        for(var j = 0; j < dishes.length; j+=2){\r\n                            console.log(dishes[j],\" \",dishes[j+1]);\r\n                            request.get(\"/dishes/getDataById\",{\r\n                                params:{\r\n                                    id: dishes[j]\r\n                                }\r\n                            }).then(res=>{\r\n                                console.log(res.data)\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n            },\r\n            //分页操作\r\n            handleSizeChange(pageSize){\r\n                this.pageSize = pageSize;\r\n                this.getData();\r\n            },\r\n            handleCurrentChange(currentPage){\r\n                this.currentPage = currentPage;\r\n                this.getData();\r\n            },\r\n        }\r\n    }\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}